{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lachlanmackay/g16/client/src/protectedRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction ProtectedRoute({\n  isAuth: isAuth,\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/lachlanmackay/g16/client/src/protectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","isAuth","component","Component","rest","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;AAEA,SAASC,cAAT,CAAwB;AAACC,EAAAA,MAAM,EAAEA,MAAT;AAAiBC,EAAAA,SAAS,EAAEC,SAA5B;AAAuC,KAAGC;AAA1C,CAAxB,EAAyE;AACrE,sBACI,QAAC,KAAD,OACIA,IADJ;AAEA,IAAA,MAAM,EAAGC,KAAD,IAAW;AACf,UAAIJ,MAAJ,EAAW;AACP,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAEO;AACH,4BAAQ,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAACK,YAAAA,QAAQ,EAAE,GAAX;AAAgBC,YAAAA,KAAK,EAAE;AAACC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAAvB;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH;AACJ;AARD;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAbQT,c;AAeT,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\n\nfunction ProtectedRoute({isAuth: isAuth, component: Component, ...rest}) {\n    return (\n        <Route \n        {...rest} \n        render={(props) => {\n            if (isAuth){\n                return <Component/>\n            } else {\n                return (<Redirect to={{pathname: '/', state: {from: props.location } }} />);\n            }\n        }}\n        />\n    );\n}\n\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}