{"ast":null,"code":"import { useRef, createElement, useContext, useCallback, useEffect, useMemo, Fragment, useState, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { createNamedContext, forwardRefWithAs, makeId, useCheckStyles, isFunction, useUpdateEffect, useForkedRef, getOwnerDocument, useIsomorphicLayoutEffect, wrapEvent, useLazyRef, noop } from '@reach/utils';\nimport { createDescendantContext, useDescendantsInit, DescendantProvider, useDescendant, useDescendants } from '@reach/descendants';\nimport { findAll } from 'highlight-words-core';\nimport { useId } from '@reach/auto-id';\nimport { Popover, positionMatchWidth } from '@reach/popover';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar _on, _on2, _on3, _on4, _states; ////////////////////////////////////////////////////////////////////////////////\n// States\n// Nothing going on, waiting for the user to type or use the arrow keys\n\n\nvar IDLE = \"IDLE\"; // The component is suggesting options as the user types\n\nvar SUGGESTING = \"SUGGESTING\"; // The user is using the keyboard to navigate the list, not typing\n\nvar NAVIGATING = \"NAVIGATING\"; // The user is interacting with arbitrary elements inside the popup that\n// are not ComboboxInputs\n\nvar INTERACTING = \"INTERACTING\"; ////////////////////////////////////////////////////////////////////////////////\n// Events\n// User cleared the value w/ backspace, but input still has focus\n\nvar CLEAR = \"CLEAR\"; // User is typing\n\nvar CHANGE = \"CHANGE\"; // Initial input value change handler for syncing user state with state machine\n// Prevents initial change from sending the user to the NAVIGATING state\n// https://github.com/reach/reach-ui/issues/464\n\nvar INITIAL_CHANGE = \"INITIAL_CHANGE\"; // User is navigating w/ the keyboard\n\nvar NAVIGATE = \"NAVIGATE\"; // User can be navigating with keyboard and then click instead, we want the\n// value from the click, not the current nav item\n\nvar SELECT_WITH_KEYBOARD = \"SELECT_WITH_KEYBOARD\";\nvar SELECT_WITH_CLICK = \"SELECT_WITH_CLICK\"; // Pretty self-explanatory, user can hit escape or blur to close the popover\n\nvar ESCAPE = \"ESCAPE\";\nvar BLUR = \"BLUR\"; // The user left the input to interact with arbitrary elements inside the popup\n\nvar INTERACT = \"INTERACT\";\nvar FOCUS = \"FOCUS\";\nvar OPEN_WITH_BUTTON = \"OPEN_WITH_BUTTON\";\nvar CLOSE_WITH_BUTTON = \"CLOSE_WITH_BUTTON\"; ////////////////////////////////////////////////////////////////////////////////\n\nvar stateChart = {\n  initial: IDLE,\n  states: (_states = {}, _states[IDLE] = {\n    on: (_on = {}, _on[BLUR] = IDLE, _on[CLEAR] = IDLE, _on[CHANGE] = SUGGESTING, _on[INITIAL_CHANGE] = IDLE, _on[FOCUS] = SUGGESTING, _on[NAVIGATE] = NAVIGATING, _on[OPEN_WITH_BUTTON] = SUGGESTING, _on)\n  }, _states[SUGGESTING] = {\n    on: (_on2 = {}, _on2[CHANGE] = SUGGESTING, _on2[FOCUS] = SUGGESTING, _on2[NAVIGATE] = NAVIGATING, _on2[CLEAR] = IDLE, _on2[ESCAPE] = IDLE, _on2[BLUR] = IDLE, _on2[SELECT_WITH_CLICK] = IDLE, _on2[INTERACT] = INTERACTING, _on2[CLOSE_WITH_BUTTON] = IDLE, _on2)\n  }, _states[NAVIGATING] = {\n    on: (_on3 = {}, _on3[CHANGE] = SUGGESTING, _on3[FOCUS] = SUGGESTING, _on3[CLEAR] = IDLE, _on3[BLUR] = IDLE, _on3[ESCAPE] = IDLE, _on3[NAVIGATE] = NAVIGATING, _on3[SELECT_WITH_CLICK] = IDLE, _on3[SELECT_WITH_KEYBOARD] = IDLE, _on3[CLOSE_WITH_BUTTON] = IDLE, _on3[INTERACT] = INTERACTING, _on3)\n  }, _states[INTERACTING] = {\n    on: (_on4 = {}, _on4[CLEAR] = IDLE, _on4[CHANGE] = SUGGESTING, _on4[FOCUS] = SUGGESTING, _on4[BLUR] = IDLE, _on4[ESCAPE] = IDLE, _on4[NAVIGATE] = NAVIGATING, _on4[CLOSE_WITH_BUTTON] = IDLE, _on4[SELECT_WITH_CLICK] = IDLE, _on4)\n  }, _states)\n};\n\nvar reducer = function reducer(data, event) {\n  var nextState = _extends({}, data, {\n    lastEventType: event.type\n  });\n\n  switch (event.type) {\n    case CHANGE:\n    case INITIAL_CHANGE:\n      return _extends({}, nextState, {\n        navigationValue: null,\n        value: event.value\n      });\n\n    case NAVIGATE:\n    case OPEN_WITH_BUTTON:\n      return _extends({}, nextState, {\n        navigationValue: findNavigationValue(nextState, event)\n      });\n\n    case CLEAR:\n      return _extends({}, nextState, {\n        value: \"\",\n        navigationValue: null\n      });\n\n    case BLUR:\n    case ESCAPE:\n      return _extends({}, nextState, {\n        navigationValue: null\n      });\n\n    case SELECT_WITH_CLICK:\n      return _extends({}, nextState, {\n        value: event.value,\n        navigationValue: null\n      });\n\n    case SELECT_WITH_KEYBOARD:\n      return _extends({}, nextState, {\n        value: data.navigationValue,\n        navigationValue: null\n      });\n\n    case CLOSE_WITH_BUTTON:\n      return _extends({}, nextState, {\n        navigationValue: null\n      });\n\n    case INTERACT:\n      return nextState;\n\n    case FOCUS:\n      return _extends({}, nextState, {\n        navigationValue: findNavigationValue(nextState, event)\n      });\n\n    default:\n      return nextState;\n  }\n};\n\nfunction popoverIsExpanded(state) {\n  return [SUGGESTING, NAVIGATING, INTERACTING].includes(state);\n}\n/**\r\n * When we open a list, set the navigation value to the value in the input, if\r\n * it's in the list, then it'll automatically be highlighted.\r\n *\r\n * @param stateData\r\n * @param event\r\n */\n\n\nfunction findNavigationValue(stateData, event) {\n  // @ts-ignore\n  if (event.value) {\n    // @ts-ignore\n    return event.value; // @ts-ignore\n  } else if (event.persistSelection) {\n    return stateData.value;\n  } else {\n    return null;\n  }\n}\n\nvar ComboboxDescendantContext = /*#__PURE__*/createDescendantContext(\"ComboboxDescendantContext\");\nvar ComboboxContext = /*#__PURE__*/createNamedContext(\"ComboboxContext\", {}); // Allows us to put the option's value on context so that ComboboxOptionText\n// can work it's highlight text magic no matter what else is rendered around\n// it.\n\nvar OptionContext = /*#__PURE__*/createNamedContext(\"OptionContext\", {}); ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Combobox\r\n *\r\n * @see Docs https://reach.tech/combobox#combobox\r\n */\n\nvar Combobox = /*#__PURE__*/forwardRefWithAs(function Combobox(_ref, forwardedRef) {\n  var _data$navigationValue;\n\n  var onSelect = _ref.onSelect,\n      _ref$openOnFocus = _ref.openOnFocus,\n      openOnFocus = _ref$openOnFocus === void 0 ? false : _ref$openOnFocus,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Comp = _ref$as === void 0 ? \"div\" : _ref$as,\n      ariaLabel = _ref[\"aria-label\"],\n      ariaLabelledby = _ref[\"aria-labelledby\"],\n      props = _objectWithoutPropertiesLoose(_ref, [\"onSelect\", \"openOnFocus\", \"children\", \"as\", \"aria-label\", \"aria-labelledby\"]);\n\n  var _useDescendantsInit = useDescendantsInit(),\n      options = _useDescendantsInit[0],\n      setOptions = _useDescendantsInit[1]; // Need this to focus it\n\n\n  var inputRef = useRef();\n  var popoverRef = useRef();\n  var buttonRef = useRef(); // When <ComboboxInput autocomplete={false} /> we don't want cycle back to\n  // the user's value while navigating (because it's always the user's value),\n  // but we need to know this in useKeyDown which is far away from the prop\n  // here, so we do something sneaky and write it to this ref on context so we\n  // can use it anywhere else 😛. Another new trick for me and I'm excited\n  // about this one too!\n\n  var autocompletePropRef = useRef();\n  var persistSelectionRef = useRef();\n  var defaultData = {\n    // The value the user has typed. We derive this also when the developer is\n    // controlling the value of ComboboxInput.\n    value: \"\",\n    // the value the user has navigated to with the keyboard\n    navigationValue: null\n  };\n\n  var _useReducerMachine = useReducerMachine(stateChart, reducer, defaultData),\n      state = _useReducerMachine[0],\n      data = _useReducerMachine[1],\n      transition = _useReducerMachine[2];\n\n  useFocusManagement(data.lastEventType, inputRef);\n  var id = useId(props.id);\n  var listboxId = id ? makeId(\"listbox\", id) : \"listbox\";\n  var context = {\n    ariaLabel: ariaLabel,\n    ariaLabelledby: ariaLabelledby,\n    autocompletePropRef: autocompletePropRef,\n    buttonRef: buttonRef,\n    comboboxId: id,\n    data: data,\n    inputRef: inputRef,\n    isExpanded: popoverIsExpanded(state),\n    listboxId: listboxId,\n    onSelect: onSelect || noop,\n    openOnFocus: openOnFocus,\n    persistSelectionRef: persistSelectionRef,\n    popoverRef: popoverRef,\n    state: state,\n    transition: transition\n  };\n  useCheckStyles(\"combobox\");\n  return /*#__PURE__*/createElement(DescendantProvider, {\n    context: ComboboxDescendantContext,\n    items: options,\n    set: setOptions\n  }, /*#__PURE__*/createElement(ComboboxContext.Provider, {\n    value: context\n  }, /*#__PURE__*/createElement(Comp, _extends({}, props, {\n    \"data-reach-combobox\": \"\",\n    \"data-state\": getDataState(state),\n    ref: forwardedRef\n  }), isFunction(children) ? children({\n    id: id,\n    isExpanded: popoverIsExpanded(state),\n    navigationValue: (_data$navigationValue = data.navigationValue) != null ? _data$navigationValue : null,\n    state: state\n  }) : children)));\n});\n/**\r\n * @see Docs https://reach.tech/combobox#combobox-props\r\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n  Combobox.displayName = \"Combobox\";\n  Combobox.propTypes = {\n    as: PropTypes.any,\n    onSelect: PropTypes.func,\n    openOnFocus: PropTypes.bool\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * ComboboxInput\r\n *\r\n * Wraps an `<input/>` with a couple extra props that work with the combobox.\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxinput\r\n */\n\n\nvar ComboboxInput = /*#__PURE__*/forwardRefWithAs(function ComboboxInput(_ref2, forwardedRef) {\n  var _ref2$as = _ref2.as,\n      Comp = _ref2$as === void 0 ? \"input\" : _ref2$as,\n      _ref2$selectOnClick = _ref2.selectOnClick,\n      selectOnClick = _ref2$selectOnClick === void 0 ? false : _ref2$selectOnClick,\n      _ref2$autocomplete = _ref2.autocomplete,\n      autocomplete = _ref2$autocomplete === void 0 ? true : _ref2$autocomplete,\n      onClick = _ref2.onClick,\n      onChange = _ref2.onChange,\n      onKeyDown = _ref2.onKeyDown,\n      onBlur = _ref2.onBlur,\n      onFocus = _ref2.onFocus,\n      controlledValue = _ref2.value,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"as\", \"selectOnClick\", \"autocomplete\", \"onClick\", \"onChange\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"value\"]); // https://github.com/reach/reach-ui/issues/464\n\n\n  var _React$useRef = useRef(controlledValue),\n      initialControlledValue = _React$useRef.current;\n\n  var controlledValueChangedRef = useRef(false);\n  useUpdateEffect(function () {\n    controlledValueChangedRef.current = true;\n  }, [controlledValue]);\n\n  var _React$useContext = useContext(ComboboxContext),\n      _React$useContext$dat = _React$useContext.data,\n      navigationValue = _React$useContext$dat.navigationValue,\n      value = _React$useContext$dat.value,\n      lastEventType = _React$useContext$dat.lastEventType,\n      inputRef = _React$useContext.inputRef,\n      state = _React$useContext.state,\n      transition = _React$useContext.transition,\n      listboxId = _React$useContext.listboxId,\n      autocompletePropRef = _React$useContext.autocompletePropRef,\n      openOnFocus = _React$useContext.openOnFocus,\n      isExpanded = _React$useContext.isExpanded,\n      ariaLabel = _React$useContext.ariaLabel,\n      ariaLabelledby = _React$useContext.ariaLabelledby;\n\n  var ref = useForkedRef(inputRef, forwardedRef); // Because we close the List on blur, we need to track if the blur is\n  // caused by clicking inside the list, and if so, don't close the List.\n\n  var selectOnClickRef = useRef(false);\n  var handleKeyDown = useKeyDown();\n  var handleBlur = useBlur();\n  var isControlled = controlledValue != null; // Layout effect should be SSR-safe here because we don't actually do\n  // anything with this ref that involves rendering until after we've\n  // let the client hydrate in nested components.\n\n  useIsomorphicLayoutEffect(function () {\n    autocompletePropRef.current = autocomplete;\n  }, [autocomplete, autocompletePropRef]);\n  var handleValueChange = useCallback(function (value) {\n    if (value.trim() === \"\") {\n      transition(CLEAR);\n    } else if (value === initialControlledValue && !controlledValueChangedRef.current) {\n      transition(INITIAL_CHANGE, {\n        value: value\n      });\n    } else {\n      transition(CHANGE, {\n        value: value\n      });\n    }\n  }, [initialControlledValue, transition]);\n  useEffect(function () {\n    // If they are controlling the value we still need to do our transitions,\n    // so  we have this derived state to emulate onChange of the input as we\n    // receive new `value`s ...[*]\n    if (isControlled && controlledValue !== value && ( // https://github.com/reach/reach-ui/issues/481\n    controlledValue.trim() === \"\" ? (value || \"\").trim() !== \"\" : true)) {\n      handleValueChange(controlledValue);\n    }\n  }, [controlledValue, handleValueChange, isControlled, value]); // [*]... and when controlled, we don't trigger handleValueChange as the\n  // user types, instead the developer controls it with the normal input\n  // onChange prop\n\n  function handleChange(event) {\n    var value = event.target.value;\n\n    if (!isControlled) {\n      handleValueChange(value);\n    }\n  }\n\n  function handleFocus() {\n    if (selectOnClick) {\n      selectOnClickRef.current = true;\n    } // If we select an option with click, useFocusManagement will focus the\n    // input, in those cases we don't want to cause the menu to open back up,\n    // so we guard behind these states.\n\n\n    if (openOnFocus && lastEventType !== SELECT_WITH_CLICK) {\n      transition(FOCUS);\n    }\n  }\n\n  function handleClick() {\n    if (selectOnClickRef.current) {\n      selectOnClickRef.current = false;\n      inputRef.current.select();\n    }\n  }\n\n  var inputValue = autocomplete && (state === NAVIGATING || state === INTERACTING) ? // When idle, we don't have a navigationValue on ArrowUp/Down\n  navigationValue || controlledValue || value : controlledValue || value;\n  return /*#__PURE__*/createElement(Comp, _extends({\n    \"aria-activedescendant\": navigationValue ? String(makeHash(navigationValue)) : undefined,\n    \"aria-autocomplete\": \"both\",\n    \"aria-controls\": listboxId,\n    \"aria-expanded\": isExpanded,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledby,\n    role: \"combobox\"\n  }, props, {\n    \"data-reach-combobox-input\": \"\",\n    \"data-state\": getDataState(state),\n    ref: ref,\n    onBlur: wrapEvent(onBlur, handleBlur),\n    onChange: wrapEvent(onChange, handleChange),\n    onClick: wrapEvent(onClick, handleClick),\n    onFocus: wrapEvent(onFocus, handleFocus),\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown),\n    value: inputValue || \"\"\n  }));\n});\n/**\r\n * @see Docs https://reach.tech/combobox#comboboxinput-props\r\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n  ComboboxInput.displayName = \"ComboboxInput\";\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * ComboboxPopover\r\n *\r\n * Contains the popup that renders the list. Because some UI needs to render\r\n * more than the list in the popup, you need to render one of these around the\r\n * list. For example, maybe you want to render the number of results suggested.\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxpopover\r\n */\n\n\nvar ComboboxPopover = /*#__PURE__*/forwardRefWithAs(function ComboboxPopover(_ref3, forwardedRef) {\n  var _ref3$as = _ref3.as,\n      Comp = _ref3$as === void 0 ? \"div\" : _ref3$as,\n      children = _ref3.children,\n      _ref3$portal = _ref3.portal,\n      portal = _ref3$portal === void 0 ? true : _ref3$portal,\n      onKeyDown = _ref3.onKeyDown,\n      onBlur = _ref3.onBlur,\n      _ref3$position = _ref3.position,\n      position = _ref3$position === void 0 ? positionMatchWidth : _ref3$position,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"as\", \"children\", \"portal\", \"onKeyDown\", \"onBlur\", \"position\"]);\n\n  var _React$useContext2 = useContext(ComboboxContext),\n      popoverRef = _React$useContext2.popoverRef,\n      inputRef = _React$useContext2.inputRef,\n      isExpanded = _React$useContext2.isExpanded,\n      state = _React$useContext2.state;\n\n  var ref = useForkedRef(popoverRef, forwardedRef);\n  var handleKeyDown = useKeyDown();\n  var handleBlur = useBlur();\n  var sharedProps = {\n    \"data-reach-combobox-popover\": \"\",\n    \"data-state\": getDataState(state),\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown),\n    onBlur: wrapEvent(onBlur, handleBlur),\n    // Instead of conditionally rendering the popover we use the `hidden` prop\n    // because we don't want to unmount on close (from escape or onSelect).\n    // However, the developer can conditionally render the ComboboxPopover if\n    // they do want to cause mount/unmount based on the app's own data (like\n    // results.length or whatever).\n    hidden: !isExpanded,\n    tabIndex: -1,\n    children: children\n  };\n  return portal ? /*#__PURE__*/createElement(Popover, _extends({\n    as: Comp\n  }, props, {\n    ref: ref,\n    position: position,\n    targetRef: inputRef\n  }, sharedProps)) : /*#__PURE__*/createElement(Comp, _extends({\n    ref: ref\n  }, props, sharedProps));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ComboboxPopover.displayName = \"ComboboxPopover\";\n}\n/**\r\n * @see Docs https://reach.tech/combobox#comboboxpopover-props\r\n */\n////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * ComboboxList\r\n *\r\n * Contains the `ComboboxOption` elements and sets up the proper aria attributes\r\n * for the list.\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxlist\r\n */\n\n\nvar ComboboxList = /*#__PURE__*/forwardRefWithAs(function ComboboxList(_ref4, forwardedRef) {\n  var _ref4$persistSelectio = _ref4.persistSelection,\n      persistSelection = _ref4$persistSelectio === void 0 ? false : _ref4$persistSelectio,\n      _ref4$as = _ref4.as,\n      Comp = _ref4$as === void 0 ? \"ul\" : _ref4$as,\n      props = _objectWithoutPropertiesLoose(_ref4, [\"persistSelection\", \"as\"]);\n\n  var _React$useContext3 = useContext(ComboboxContext),\n      persistSelectionRef = _React$useContext3.persistSelectionRef,\n      listboxId = _React$useContext3.listboxId;\n\n  if (persistSelection) {\n    persistSelectionRef.current = true;\n  }\n\n  return /*#__PURE__*/createElement(Comp, _extends({\n    role: \"listbox\"\n  }, props, {\n    ref: forwardedRef,\n    \"data-reach-combobox-list\": \"\",\n    id: listboxId\n  }));\n});\n/**\r\n * @see Docs https://reach.tech/combobox#comboboxlist-props\r\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n  ComboboxList.displayName = \"ComboboxList\";\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * ComboboxOption\r\n *\r\n * An option that is suggested to the user as they interact with the combobox.\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxoption\r\n */\n\n\nvar ComboboxOption = /*#__PURE__*/forwardRefWithAs(function ComboboxOption(_ref5, forwardedRef) {\n  var _ref5$as = _ref5.as,\n      Comp = _ref5$as === void 0 ? \"li\" : _ref5$as,\n      children = _ref5.children,\n      value = _ref5.value,\n      onClick = _ref5.onClick,\n      props = _objectWithoutPropertiesLoose(_ref5, [\"as\", \"children\", \"value\", \"onClick\"]);\n\n  var _React$useContext4 = useContext(ComboboxContext),\n      onSelect = _React$useContext4.onSelect,\n      navigationValue = _React$useContext4.data.navigationValue,\n      transition = _React$useContext4.transition;\n\n  var ownRef = useRef(null);\n  var ref = useForkedRef(forwardedRef, ownRef);\n  var index = useDescendant({\n    element: ownRef.current,\n    value: value\n  }, ComboboxDescendantContext);\n  var isActive = navigationValue === value;\n\n  var handleClick = function handleClick() {\n    onSelect && onSelect(value);\n    transition(SELECT_WITH_CLICK, {\n      value: value\n    });\n  };\n\n  return /*#__PURE__*/createElement(OptionContext.Provider, {\n    value: {\n      value: value,\n      index: index\n    }\n  }, /*#__PURE__*/createElement(Comp, _extends({\n    \"aria-selected\": isActive,\n    role: \"option\"\n  }, props, {\n    \"data-reach-combobox-option\": \"\",\n    ref: ref,\n    id: String(makeHash(value)),\n    \"data-highlighted\": isActive ? \"\" : undefined // Without this the menu will close from `onBlur`, but with it the\n    // element can be `document.activeElement` and then our focus checks in\n    // onBlur will work as intended\n    ,\n    tabIndex: -1,\n    onClick: wrapEvent(onClick, handleClick)\n  }), children ? isFunction(children) ? children({\n    value: value,\n    index: index\n  }) : children : /*#__PURE__*/createElement(ComboboxOptionText, null)));\n});\n/**\r\n * @see Docs https://reach.tech/combobox#comboboxoption-props\r\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n  ComboboxOption.displayName = \"ComboboxOption\";\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * ComboboxOptionText\r\n *\r\n * Renders the value of a `ComboboxOption` as text but with spans wrapping the\r\n * matching and non-matching segments of text.\r\n *\r\n * We don't forwardRef or spread props because we render multiple spans or null,\r\n * should be fine 🤙\r\n *\r\n * @example\r\n *   <ComboboxOption value=\"Seattle\">\r\n *     🌧 <ComboboxOptionText />\r\n *   </ComboboxOption>\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxoptiontext\r\n */\n\n\nfunction ComboboxOptionText() {\n  var _React$useContext5 = useContext(OptionContext),\n      value = _React$useContext5.value;\n\n  var _React$useContext6 = useContext(ComboboxContext),\n      contextValue = _React$useContext6.data.value;\n\n  var results = useMemo(function () {\n    return findAll({\n      searchWords: escapeRegexp(contextValue || \"\").split(/\\s+/),\n      textToHighlight: value\n    });\n  }, [contextValue, value]);\n  return /*#__PURE__*/createElement(Fragment, null, results.length ? results.map(function (result, index) {\n    var str = value.slice(result.start, result.end);\n    return /*#__PURE__*/createElement(\"span\", {\n      key: index,\n      \"data-reach-combobox-option-text\": \"\",\n      \"data-user-value\": result.highlight ? true : undefined,\n      \"data-suggested-value\": result.highlight ? undefined : true\n    }, str);\n  }) : value);\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ComboboxOptionText.displayName = \"ComboboxOptionText\";\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * ComboboxButton\r\n */\n\n\nvar ComboboxButton = /*#__PURE__*/forwardRefWithAs(function ComboboxButton(_ref6, forwardedRef) {\n  var _ref6$as = _ref6.as,\n      Comp = _ref6$as === void 0 ? \"button\" : _ref6$as,\n      onClick = _ref6.onClick,\n      onKeyDown = _ref6.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref6, [\"as\", \"onClick\", \"onKeyDown\"]);\n\n  var _React$useContext7 = useContext(ComboboxContext),\n      transition = _React$useContext7.transition,\n      state = _React$useContext7.state,\n      buttonRef = _React$useContext7.buttonRef,\n      listboxId = _React$useContext7.listboxId,\n      isExpanded = _React$useContext7.isExpanded;\n\n  var ref = useForkedRef(buttonRef, forwardedRef);\n  var handleKeyDown = useKeyDown();\n\n  var handleClick = function handleClick() {\n    if (state === IDLE) {\n      transition(OPEN_WITH_BUTTON);\n    } else {\n      transition(CLOSE_WITH_BUTTON);\n    }\n  };\n\n  return /*#__PURE__*/createElement(Comp, _extends({\n    \"aria-controls\": listboxId,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": isExpanded\n  }, props, {\n    \"data-reach-combobox-button\": \"\",\n    ref: ref,\n    onClick: wrapEvent(onClick, handleClick),\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown)\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ComboboxButton.displayName = \"ComboboxButton\";\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Move focus back to the input if we start navigating w/ the\r\n * keyboard after focus has moved to any focusable content in\r\n * the popup.\r\n *\r\n * @param lastEventType\r\n * @param inputRef\r\n */\n\n\nfunction useFocusManagement(lastEventType, inputRef) {\n  // useLayoutEffect so that the cursor goes to the end of the input instead\n  // of awkwardly at the beginning, unclear to me why 🤷‍♂️\n  //\n  // Should be safe to use here since we're just focusing an input.\n  useIsomorphicLayoutEffect(function () {\n    if (lastEventType === NAVIGATE || lastEventType === ESCAPE || lastEventType === SELECT_WITH_CLICK || lastEventType === OPEN_WITH_BUTTON) {\n      inputRef.current.focus();\n    }\n  }, [inputRef, lastEventType]);\n}\n/**\r\n * We want the same events when the input or the popup have focus (HOW COOL ARE\r\n * HOOKS BTW?) This is probably the hairiest piece but it's not bad.\r\n */\n\n\nfunction useKeyDown() {\n  var _React$useContext8 = useContext(ComboboxContext),\n      navigationValue = _React$useContext8.data.navigationValue,\n      onSelect = _React$useContext8.onSelect,\n      state = _React$useContext8.state,\n      transition = _React$useContext8.transition,\n      autocompletePropRef = _React$useContext8.autocompletePropRef,\n      persistSelectionRef = _React$useContext8.persistSelectionRef;\n\n  var options = useDescendants(ComboboxDescendantContext);\n  return function handleKeyDown(event) {\n    var index = options.findIndex(function (_ref7) {\n      var value = _ref7.value;\n      return value === navigationValue;\n    });\n\n    function getNextOption() {\n      var atBottom = index === options.length - 1;\n\n      if (atBottom) {\n        if (autocompletePropRef.current) {\n          // Go back to the value the user has typed because we are\n          // autocompleting and they need to be able to get back to what\n          // they had typed w/o having to backspace out.\n          return null;\n        } else {\n          // cycle through\n          return getFirstOption();\n        }\n      } else {\n        // Go to the next item in the list\n        return options[(index + 1) % options.length];\n      }\n    }\n\n    function getPreviousOption() {\n      var atTop = index === 0;\n\n      if (atTop) {\n        if (autocompletePropRef.current) {\n          // Go back to the value the user has typed because we are\n          // autocompleting and they need to be able to get back to what\n          // they had typed w/o having to backspace out.\n          return null;\n        } else {\n          // cycle through\n          return getLastOption();\n        }\n      } else if (index === -1) {\n        // displaying the user's value, so go select the last one\n        return getLastOption();\n      } else {\n        // normal case, select previous\n        return options[(index - 1 + options.length) % options.length];\n      }\n    }\n\n    function getFirstOption() {\n      return options[0];\n    }\n\n    function getLastOption() {\n      return options[options.length - 1];\n    }\n\n    switch (event.key) {\n      case \"ArrowDown\":\n        // Don't scroll the page\n        event.preventDefault();\n\n        if (!options || !options.length) {\n          return;\n        }\n\n        if (state === IDLE) {\n          // Opening a closed list\n          transition(NAVIGATE, {\n            persistSelection: persistSelectionRef.current\n          });\n        } else {\n          var next = getNextOption();\n          transition(NAVIGATE, {\n            value: next ? next.value : null\n          });\n        }\n\n        break;\n      // A lot of duplicate code with ArrowDown up next, I'm already over it.\n\n      case \"ArrowUp\":\n        // Don't scroll the page\n        event.preventDefault();\n\n        if (!options || options.length === 0) {\n          return;\n        }\n\n        if (state === IDLE) {\n          transition(NAVIGATE);\n        } else {\n          var prev = getPreviousOption();\n          transition(NAVIGATE, {\n            value: prev ? prev.value : null\n          });\n        }\n\n        break;\n\n      case \"Home\":\n      case \"PageUp\":\n        // Don't scroll the page\n        event.preventDefault();\n\n        if (!options || options.length === 0) {\n          return;\n        }\n\n        if (state === IDLE) {\n          transition(NAVIGATE);\n        } else {\n          transition(NAVIGATE, {\n            value: getFirstOption().value\n          });\n        }\n\n        break;\n\n      case \"End\":\n      case \"PageDown\":\n        // Don't scroll the page\n        event.preventDefault();\n\n        if (!options || options.length === 0) {\n          return;\n        }\n\n        if (state === IDLE) {\n          transition(NAVIGATE);\n        } else {\n          transition(NAVIGATE, {\n            value: getLastOption().value\n          });\n        }\n\n        break;\n\n      case \"Escape\":\n        if (state !== IDLE) {\n          transition(ESCAPE);\n        }\n\n        break;\n\n      case \"Enter\":\n        if (state === NAVIGATING && navigationValue !== null) {\n          // don't want to submit forms\n          event.preventDefault();\n          onSelect && onSelect(navigationValue);\n          transition(SELECT_WITH_KEYBOARD);\n        }\n\n        break;\n    }\n  };\n}\n\nfunction useBlur() {\n  var _React$useContext9 = useContext(ComboboxContext),\n      state = _React$useContext9.state,\n      transition = _React$useContext9.transition,\n      popoverRef = _React$useContext9.popoverRef,\n      inputRef = _React$useContext9.inputRef,\n      buttonRef = _React$useContext9.buttonRef;\n\n  var rafIds = useLazyRef(function () {\n    return new Set();\n  });\n  useEffect(function () {\n    return function () {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      rafIds.current.forEach(function (id) {\n        return cancelAnimationFrame(id);\n      });\n    };\n  }, [rafIds]);\n  return function handleBlur() {\n    var ownerDocument = getOwnerDocument(popoverRef.current);\n\n    if (!ownerDocument) {\n      return;\n    }\n\n    var rafId = requestAnimationFrame(function () {\n      // we on want to close only if focus propss outside the combobox\n      if (ownerDocument.activeElement !== inputRef.current && ownerDocument.activeElement !== buttonRef.current && popoverRef.current) {\n        if (popoverRef.current.contains(ownerDocument.activeElement)) {\n          // focus landed inside the combobox, keep it open\n          if (state !== INTERACTING) {\n            transition(INTERACT);\n          }\n        } else {\n          // focus landed outside the combobox, close it.\n          transition(BLUR);\n        }\n      }\n    });\n    rafIds.current.add(rafId);\n  };\n}\n/**\r\n * This manages transitions between states with a built in reducer to manage\r\n * the data that goes with those transitions.\r\n *\r\n * @param chart\r\n * @param reducer\r\n * @param initialData\r\n */\n\n\nfunction useReducerMachine(chart, reducer, initialData) {\n  var _React$useState = useState(chart.initial),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var _React$useReducer = useReducer(reducer, initialData),\n      data = _React$useReducer[0],\n      dispatch = _React$useReducer[1];\n\n  var transition = function transition(event, payload) {\n    if (payload === void 0) {\n      payload = {};\n    }\n\n    var currentState = chart.states[state];\n    var nextState = currentState && currentState.on[event];\n\n    if (nextState) {\n      dispatch(_extends({\n        type: event,\n        state: state,\n        nextState: state\n      }, payload));\n      setState(nextState);\n      return;\n    }\n  };\n\n  return [state, data, transition];\n}\n/**\r\n * We don't want to track the active descendant with indexes because nothing is\r\n * more annoying in a combobox than having it change values RIGHT AS YOU HIT\r\n * ENTER. That only happens if you use the index as your data, rather than\r\n * *your data as your data*. We use this to generate a unique ID based on the\r\n * value of each item.  This function is short, sweet, and good enough™ (I also\r\n * don't know how it works, tbqh)\r\n *\r\n * @see https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n * @param str\r\n */\n\n\nfunction makeHash(str) {\n  var hash = 0;\n\n  if (str.length === 0) {\n    return hash;\n  }\n\n  for (var i = 0; i < str.length; i++) {\n    var _char = str.charCodeAt(i);\n\n    hash = (hash << 5) - hash + _char;\n    hash = hash & hash;\n  }\n\n  return hash;\n}\n\nfunction getDataState(state) {\n  return state.toLowerCase();\n}\n/**\r\n * Escape regexp special characters in `str`\r\n *\r\n * @see https://github.com/component/escape-regexp/blob/5ce923c1510c9802b3da972c90b6861dd2829b6b/index.js\r\n * @param str\r\n */\n\n\nfunction escapeRegexp(str) {\n  return String(str).replace(/([.*+?=^!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\n} ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * A hook that exposes data for a given `Combobox` component to its descendants.\r\n *\r\n * @see Docs https://reach.tech/combobox#usecomboboxcontext\r\n */\n\n\nfunction useComboboxContext() {\n  var _React$useContext10 = useContext(ComboboxContext),\n      isExpanded = _React$useContext10.isExpanded,\n      comboboxId = _React$useContext10.comboboxId,\n      data = _React$useContext10.data,\n      state = _React$useContext10.state;\n\n  var navigationValue = data.navigationValue;\n  return useMemo(function () {\n    return {\n      id: comboboxId,\n      isExpanded: isExpanded,\n      navigationValue: navigationValue != null ? navigationValue : null,\n      state: state\n    };\n  }, [comboboxId, isExpanded, navigationValue, state]);\n}\n/**\r\n * A hook that exposes data for a given `ComboboxOption` component to its descendants.\r\n *\r\n * @see Docs https://reach.tech/combobox#usecomboboxcontext\r\n */\n\n\nfunction useComboboxOptionContext() {\n  var _React$useContext11 = useContext(OptionContext),\n      value = _React$useContext11.value,\n      index = _React$useContext11.index;\n\n  return useMemo(function () {\n    return {\n      value: value,\n      index: index\n    };\n  }, [value, index]);\n} ////////////////////////////////////////////////////////////////////////////////\n// Well alright, you made it all the way here to like 1100 lines of code (geez,\n// what the heck?). Have a great day :D\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\n\nexport { Combobox, ComboboxButton, ComboboxInput, ComboboxList, ComboboxOption, ComboboxOptionText, ComboboxPopover, escapeRegexp, useComboboxContext, useComboboxOptionContext };","map":{"version":3,"sources":["C:/Users/evan_/Documents/GitHub/picshare/node_modules/@reach/combobox/dist/reach-combobox.esm.js"],"names":["useRef","createElement","useContext","useCallback","useEffect","useMemo","Fragment","useState","useReducer","PropTypes","createNamedContext","forwardRefWithAs","makeId","useCheckStyles","isFunction","useUpdateEffect","useForkedRef","getOwnerDocument","useIsomorphicLayoutEffect","wrapEvent","useLazyRef","noop","createDescendantContext","useDescendantsInit","DescendantProvider","useDescendant","useDescendants","findAll","useId","Popover","positionMatchWidth","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","_on","_on2","_on3","_on4","_states","IDLE","SUGGESTING","NAVIGATING","INTERACTING","CLEAR","CHANGE","INITIAL_CHANGE","NAVIGATE","SELECT_WITH_KEYBOARD","SELECT_WITH_CLICK","ESCAPE","BLUR","INTERACT","FOCUS","OPEN_WITH_BUTTON","CLOSE_WITH_BUTTON","stateChart","initial","states","on","reducer","data","event","nextState","lastEventType","type","navigationValue","value","findNavigationValue","popoverIsExpanded","state","includes","stateData","persistSelection","ComboboxDescendantContext","ComboboxContext","OptionContext","Combobox","_ref","forwardedRef","_data$navigationValue","onSelect","_ref$openOnFocus","openOnFocus","children","_ref$as","as","Comp","ariaLabel","ariaLabelledby","props","_useDescendantsInit","options","setOptions","inputRef","popoverRef","buttonRef","autocompletePropRef","persistSelectionRef","defaultData","_useReducerMachine","useReducerMachine","transition","useFocusManagement","id","listboxId","context","comboboxId","isExpanded","items","set","Provider","getDataState","ref","process","env","NODE_ENV","displayName","propTypes","any","func","bool","ComboboxInput","_ref2","_ref2$as","_ref2$selectOnClick","selectOnClick","_ref2$autocomplete","autocomplete","onClick","onChange","onKeyDown","onBlur","onFocus","controlledValue","_React$useRef","initialControlledValue","current","controlledValueChangedRef","_React$useContext","_React$useContext$dat","selectOnClickRef","handleKeyDown","useKeyDown","handleBlur","useBlur","isControlled","handleValueChange","trim","handleChange","handleFocus","handleClick","select","inputValue","String","makeHash","undefined","role","ComboboxPopover","_ref3","_ref3$as","_ref3$portal","portal","_ref3$position","position","_React$useContext2","sharedProps","hidden","tabIndex","targetRef","ComboboxList","_ref4","_ref4$persistSelectio","_ref4$as","_React$useContext3","ComboboxOption","_ref5","_ref5$as","_React$useContext4","ownRef","index","element","isActive","ComboboxOptionText","_React$useContext5","_React$useContext6","contextValue","results","searchWords","escapeRegexp","split","textToHighlight","map","result","str","slice","start","end","highlight","ComboboxButton","_ref6","_ref6$as","_React$useContext7","focus","_React$useContext8","findIndex","_ref7","getNextOption","atBottom","getFirstOption","getPreviousOption","atTop","getLastOption","preventDefault","next","prev","_React$useContext9","rafIds","Set","forEach","cancelAnimationFrame","ownerDocument","rafId","requestAnimationFrame","activeElement","contains","add","chart","initialData","_React$useState","setState","_React$useReducer","dispatch","payload","currentState","hash","_char","charCodeAt","toLowerCase","replace","useComboboxContext","_React$useContext10","useComboboxOptionContext","_React$useContext11"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,aAAjB,EAAgCC,UAAhC,EAA4CC,WAA5C,EAAyDC,SAAzD,EAAoEC,OAApE,EAA6EC,QAA7E,EAAuFC,QAAvF,EAAiGC,UAAjG,QAAmH,OAAnH;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,MAA/C,EAAuDC,cAAvD,EAAuEC,UAAvE,EAAmFC,eAAnF,EAAoGC,YAApG,EAAkHC,gBAAlH,EAAoIC,yBAApI,EAA+JC,SAA/J,EAA0KC,UAA1K,EAAsLC,IAAtL,QAAkM,cAAlM;AACA,SAASC,uBAAT,EAAkCC,kBAAlC,EAAsDC,kBAAtD,EAA0EC,aAA1E,EAAyFC,cAAzF,QAA+G,oBAA/G;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,gBAA5C;;AAEA,SAASC,6BAAT,CAAuCC,MAAvC,EAA+CC,QAA/C,EAAyD;AACvD,MAAID,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AACpB,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAAjB;AACA,MAAIM,GAAJ,EAASC,CAAT;;AAEA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,UAAU,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCD,IAAAA,GAAG,GAAGH,UAAU,CAACI,CAAD,CAAhB;AACA,QAAIN,QAAQ,CAACQ,OAAT,CAAiBH,GAAjB,KAAyB,CAA7B,EAAgC;AAChCJ,IAAAA,MAAM,CAACI,GAAD,CAAN,GAAcN,MAAM,CAACM,GAAD,CAApB;AACD;;AAED,SAAOJ,MAAP;AACD;;AAED,SAASQ,QAAT,GAAoB;AAClBA,EAAAA,QAAQ,GAAGN,MAAM,CAACO,MAAP,IAAiB,UAAUT,MAAV,EAAkB;AAC5C,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,SAAS,CAACJ,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAIP,MAAM,GAAGY,SAAS,CAACL,CAAD,CAAtB;;AAEA,WAAK,IAAID,GAAT,IAAgBN,MAAhB,EAAwB;AACtB,YAAII,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCf,MAArC,EAA6CM,GAA7C,CAAJ,EAAuD;AACrDJ,UAAAA,MAAM,CAACI,GAAD,CAAN,GAAcN,MAAM,CAACM,GAAD,CAApB;AACD;AACF;AACF;;AAED,WAAOJ,MAAP;AACD,GAZD;;AAcA,SAAOQ,QAAQ,CAACM,KAAT,CAAe,IAAf,EAAqBJ,SAArB,CAAP;AACD;;AAED,IAAIK,GAAJ,EAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,OAA3B,C,CACA;AACA;AACA;;;AACA,IAAIC,IAAI,GAAG,MAAX,C,CAAmB;;AAEnB,IAAIC,UAAU,GAAG,YAAjB,C,CAA+B;;AAE/B,IAAIC,UAAU,GAAG,YAAjB,C,CAA+B;AAC/B;;AAEA,IAAIC,WAAW,GAAG,aAAlB,C,CAAiC;AACjC;AACA;;AAEA,IAAIC,KAAK,GAAG,OAAZ,C,CAAqB;;AAErB,IAAIC,MAAM,GAAG,QAAb,C,CAAuB;AACvB;AACA;;AAEA,IAAIC,cAAc,GAAG,gBAArB,C,CAAuC;;AAEvC,IAAIC,QAAQ,GAAG,UAAf,C,CAA2B;AAC3B;;AAEA,IAAIC,oBAAoB,GAAG,sBAA3B;AACA,IAAIC,iBAAiB,GAAG,mBAAxB,C,CAA6C;;AAE7C,IAAIC,MAAM,GAAG,QAAb;AACA,IAAIC,IAAI,GAAG,MAAX,C,CAAmB;;AAEnB,IAAIC,QAAQ,GAAG,UAAf;AACA,IAAIC,KAAK,GAAG,OAAZ;AACA,IAAIC,gBAAgB,GAAG,kBAAvB;AACA,IAAIC,iBAAiB,GAAG,mBAAxB,C,CAA6C;;AAE7C,IAAIC,UAAU,GAAG;AACfC,EAAAA,OAAO,EAAEjB,IADM;AAEfkB,EAAAA,MAAM,GAAGnB,OAAO,GAAG,EAAV,EAAcA,OAAO,CAACC,IAAD,CAAP,GAAgB;AACrCmB,IAAAA,EAAE,GAAGxB,GAAG,GAAG,EAAN,EAAUA,GAAG,CAACgB,IAAD,CAAH,GAAYX,IAAtB,EAA4BL,GAAG,CAACS,KAAD,CAAH,GAAaJ,IAAzC,EAA+CL,GAAG,CAACU,MAAD,CAAH,GAAcJ,UAA7D,EAAyEN,GAAG,CAACW,cAAD,CAAH,GAAsBN,IAA/F,EAAqGL,GAAG,CAACkB,KAAD,CAAH,GAAaZ,UAAlH,EAA8HN,GAAG,CAACY,QAAD,CAAH,GAAgBL,UAA9I,EAA0JP,GAAG,CAACmB,gBAAD,CAAH,GAAwBb,UAAlL,EAA8LN,GAAjM;AADmC,GAA9B,EAENI,OAAO,CAACE,UAAD,CAAP,GAAsB;AACvBkB,IAAAA,EAAE,GAAGvB,IAAI,GAAG,EAAP,EAAWA,IAAI,CAACS,MAAD,CAAJ,GAAeJ,UAA1B,EAAsCL,IAAI,CAACiB,KAAD,CAAJ,GAAcZ,UAApD,EAAgEL,IAAI,CAACW,QAAD,CAAJ,GAAiBL,UAAjF,EAA6FN,IAAI,CAACQ,KAAD,CAAJ,GAAcJ,IAA3G,EAAiHJ,IAAI,CAACc,MAAD,CAAJ,GAAeV,IAAhI,EAAsIJ,IAAI,CAACe,IAAD,CAAJ,GAAaX,IAAnJ,EAAyJJ,IAAI,CAACa,iBAAD,CAAJ,GAA0BT,IAAnL,EAAyLJ,IAAI,CAACgB,QAAD,CAAJ,GAAiBT,WAA1M,EAAuNP,IAAI,CAACmB,iBAAD,CAAJ,GAA0Bf,IAAjP,EAAuPJ,IAA1P;AADqB,GAFhB,EAING,OAAO,CAACG,UAAD,CAAP,GAAsB;AACvBiB,IAAAA,EAAE,GAAGtB,IAAI,GAAG,EAAP,EAAWA,IAAI,CAACQ,MAAD,CAAJ,GAAeJ,UAA1B,EAAsCJ,IAAI,CAACgB,KAAD,CAAJ,GAAcZ,UAApD,EAAgEJ,IAAI,CAACO,KAAD,CAAJ,GAAcJ,IAA9E,EAAoFH,IAAI,CAACc,IAAD,CAAJ,GAAaX,IAAjG,EAAuGH,IAAI,CAACa,MAAD,CAAJ,GAAeV,IAAtH,EAA4HH,IAAI,CAACU,QAAD,CAAJ,GAAiBL,UAA7I,EAAyJL,IAAI,CAACY,iBAAD,CAAJ,GAA0BT,IAAnL,EAAyLH,IAAI,CAACW,oBAAD,CAAJ,GAA6BR,IAAtN,EAA4NH,IAAI,CAACkB,iBAAD,CAAJ,GAA0Bf,IAAtP,EAA4PH,IAAI,CAACe,QAAD,CAAJ,GAAiBT,WAA7Q,EAA0RN,IAA7R;AADqB,GAJhB,EAMNE,OAAO,CAACI,WAAD,CAAP,GAAuB;AACxBgB,IAAAA,EAAE,GAAGrB,IAAI,GAAG,EAAP,EAAWA,IAAI,CAACM,KAAD,CAAJ,GAAcJ,IAAzB,EAA+BF,IAAI,CAACO,MAAD,CAAJ,GAAeJ,UAA9C,EAA0DH,IAAI,CAACe,KAAD,CAAJ,GAAcZ,UAAxE,EAAoFH,IAAI,CAACa,IAAD,CAAJ,GAAaX,IAAjG,EAAuGF,IAAI,CAACY,MAAD,CAAJ,GAAeV,IAAtH,EAA4HF,IAAI,CAACS,QAAD,CAAJ,GAAiBL,UAA7I,EAAyJJ,IAAI,CAACiB,iBAAD,CAAJ,GAA0Bf,IAAnL,EAAyLF,IAAI,CAACW,iBAAD,CAAJ,GAA0BT,IAAnN,EAAyNF,IAA5N;AADsB,GANjB,EAQNC,OARG;AAFS,CAAjB;;AAaA,IAAIqB,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8B;AAC1C,MAAIC,SAAS,GAAGnC,QAAQ,CAAC,EAAD,EAAKiC,IAAL,EAAW;AACjCG,IAAAA,aAAa,EAAEF,KAAK,CAACG;AADY,GAAX,CAAxB;;AAIA,UAAQH,KAAK,CAACG,IAAd;AACE,SAAKpB,MAAL;AACA,SAAKC,cAAL;AACE,aAAOlB,QAAQ,CAAC,EAAD,EAAKmC,SAAL,EAAgB;AAC7BG,QAAAA,eAAe,EAAE,IADY;AAE7BC,QAAAA,KAAK,EAAEL,KAAK,CAACK;AAFgB,OAAhB,CAAf;;AAKF,SAAKpB,QAAL;AACA,SAAKO,gBAAL;AACE,aAAO1B,QAAQ,CAAC,EAAD,EAAKmC,SAAL,EAAgB;AAC7BG,QAAAA,eAAe,EAAEE,mBAAmB,CAACL,SAAD,EAAYD,KAAZ;AADP,OAAhB,CAAf;;AAIF,SAAKlB,KAAL;AACE,aAAOhB,QAAQ,CAAC,EAAD,EAAKmC,SAAL,EAAgB;AAC7BI,QAAAA,KAAK,EAAE,EADsB;AAE7BD,QAAAA,eAAe,EAAE;AAFY,OAAhB,CAAf;;AAKF,SAAKf,IAAL;AACA,SAAKD,MAAL;AACE,aAAOtB,QAAQ,CAAC,EAAD,EAAKmC,SAAL,EAAgB;AAC7BG,QAAAA,eAAe,EAAE;AADY,OAAhB,CAAf;;AAIF,SAAKjB,iBAAL;AACE,aAAOrB,QAAQ,CAAC,EAAD,EAAKmC,SAAL,EAAgB;AAC7BI,QAAAA,KAAK,EAAEL,KAAK,CAACK,KADgB;AAE7BD,QAAAA,eAAe,EAAE;AAFY,OAAhB,CAAf;;AAKF,SAAKlB,oBAAL;AACE,aAAOpB,QAAQ,CAAC,EAAD,EAAKmC,SAAL,EAAgB;AAC7BI,QAAAA,KAAK,EAAEN,IAAI,CAACK,eADiB;AAE7BA,QAAAA,eAAe,EAAE;AAFY,OAAhB,CAAf;;AAKF,SAAKX,iBAAL;AACE,aAAO3B,QAAQ,CAAC,EAAD,EAAKmC,SAAL,EAAgB;AAC7BG,QAAAA,eAAe,EAAE;AADY,OAAhB,CAAf;;AAIF,SAAKd,QAAL;AACE,aAAOW,SAAP;;AAEF,SAAKV,KAAL;AACE,aAAOzB,QAAQ,CAAC,EAAD,EAAKmC,SAAL,EAAgB;AAC7BG,QAAAA,eAAe,EAAEE,mBAAmB,CAACL,SAAD,EAAYD,KAAZ;AADP,OAAhB,CAAf;;AAIF;AACE,aAAOC,SAAP;AApDJ;AAsDD,CA3DD;;AA6DA,SAASM,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,SAAO,CAAC7B,UAAD,EAAaC,UAAb,EAAyBC,WAAzB,EAAsC4B,QAAtC,CAA+CD,KAA/C,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASF,mBAAT,CAA6BI,SAA7B,EAAwCV,KAAxC,EAA+C;AAC7C;AACA,MAAIA,KAAK,CAACK,KAAV,EAAiB;AACf;AACA,WAAOL,KAAK,CAACK,KAAb,CAFe,CAEK;AACrB,GAHD,MAGO,IAAIL,KAAK,CAACW,gBAAV,EAA4B;AACjC,WAAOD,SAAS,CAACL,KAAjB;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF;;AAED,IAAIO,yBAAyB,GAAG,aAAalE,uBAAuB,CAAC,2BAAD,CAApE;AACA,IAAImE,eAAe,GAAG,aAAa/E,kBAAkB,CAAC,iBAAD,EAAoB,EAApB,CAArD,C,CAA8E;AAC9E;AACA;;AAEA,IAAIgF,aAAa,GAAG,aAAahF,kBAAkB,CAAC,eAAD,EAAkB,EAAlB,CAAnD,C,CAA0E;;AAE1E;AACA;AACA;AACA;AACA;;AAEA,IAAIiF,QAAQ,GAAG,aAAahF,gBAAgB,CAAC,SAASgF,QAAT,CAAkBC,IAAlB,EAAwBC,YAAxB,EAAsC;AACjF,MAAIC,qBAAJ;;AAEA,MAAIC,QAAQ,GAAGH,IAAI,CAACG,QAApB;AAAA,MACIC,gBAAgB,GAAGJ,IAAI,CAACK,WAD5B;AAAA,MAEIA,WAAW,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,KAA9B,GAAsCA,gBAFxD;AAAA,MAGIE,QAAQ,GAAGN,IAAI,CAACM,QAHpB;AAAA,MAIIC,OAAO,GAAGP,IAAI,CAACQ,EAJnB;AAAA,MAKIC,IAAI,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,KAArB,GAA6BA,OALxC;AAAA,MAMIG,SAAS,GAAGV,IAAI,CAAC,YAAD,CANpB;AAAA,MAOIW,cAAc,GAAGX,IAAI,CAAC,iBAAD,CAPzB;AAAA,MAQIY,KAAK,GAAGzE,6BAA6B,CAAC6D,IAAD,EAAO,CAAC,UAAD,EAAa,aAAb,EAA4B,UAA5B,EAAwC,IAAxC,EAA8C,YAA9C,EAA4D,iBAA5D,CAAP,CARzC;;AAUA,MAAIa,mBAAmB,GAAGlF,kBAAkB,EAA5C;AAAA,MACImF,OAAO,GAAGD,mBAAmB,CAAC,CAAD,CADjC;AAAA,MAEIE,UAAU,GAAGF,mBAAmB,CAAC,CAAD,CAFpC,CAbiF,CAexC;;;AAGzC,MAAIG,QAAQ,GAAG5G,MAAM,EAArB;AACA,MAAI6G,UAAU,GAAG7G,MAAM,EAAvB;AACA,MAAI8G,SAAS,GAAG9G,MAAM,EAAtB,CApBiF,CAoBvD;AAC1B;AACA;AACA;AACA;AACA;;AAEA,MAAI+G,mBAAmB,GAAG/G,MAAM,EAAhC;AACA,MAAIgH,mBAAmB,GAAGhH,MAAM,EAAhC;AACA,MAAIiH,WAAW,GAAG;AAChB;AACA;AACAhC,IAAAA,KAAK,EAAE,EAHS;AAIhB;AACAD,IAAAA,eAAe,EAAE;AALD,GAAlB;;AAQA,MAAIkC,kBAAkB,GAAGC,iBAAiB,CAAC7C,UAAD,EAAaI,OAAb,EAAsBuC,WAAtB,CAA1C;AAAA,MACI7B,KAAK,GAAG8B,kBAAkB,CAAC,CAAD,CAD9B;AAAA,MAEIvC,IAAI,GAAGuC,kBAAkB,CAAC,CAAD,CAF7B;AAAA,MAGIE,UAAU,GAAGF,kBAAkB,CAAC,CAAD,CAHnC;;AAKAG,EAAAA,kBAAkB,CAAC1C,IAAI,CAACG,aAAN,EAAqB8B,QAArB,CAAlB;AACA,MAAIU,EAAE,GAAG1F,KAAK,CAAC4E,KAAK,CAACc,EAAP,CAAd;AACA,MAAIC,SAAS,GAAGD,EAAE,GAAG1G,MAAM,CAAC,SAAD,EAAY0G,EAAZ,CAAT,GAA2B,SAA7C;AACA,MAAIE,OAAO,GAAG;AACZlB,IAAAA,SAAS,EAAEA,SADC;AAEZC,IAAAA,cAAc,EAAEA,cAFJ;AAGZQ,IAAAA,mBAAmB,EAAEA,mBAHT;AAIZD,IAAAA,SAAS,EAAEA,SAJC;AAKZW,IAAAA,UAAU,EAAEH,EALA;AAMZ3C,IAAAA,IAAI,EAAEA,IANM;AAOZiC,IAAAA,QAAQ,EAAEA,QAPE;AAQZc,IAAAA,UAAU,EAAEvC,iBAAiB,CAACC,KAAD,CARjB;AASZmC,IAAAA,SAAS,EAAEA,SATC;AAUZxB,IAAAA,QAAQ,EAAEA,QAAQ,IAAI1E,IAVV;AAWZ4E,IAAAA,WAAW,EAAEA,WAXD;AAYZe,IAAAA,mBAAmB,EAAEA,mBAZT;AAaZH,IAAAA,UAAU,EAAEA,UAbA;AAcZzB,IAAAA,KAAK,EAAEA,KAdK;AAeZgC,IAAAA,UAAU,EAAEA;AAfA,GAAd;AAiBAvG,EAAAA,cAAc,CAAC,UAAD,CAAd;AACA,SAAO,aAAaZ,aAAa,CAACuB,kBAAD,EAAqB;AACpDgG,IAAAA,OAAO,EAAEhC,yBAD2C;AAEpDmC,IAAAA,KAAK,EAAEjB,OAF6C;AAGpDkB,IAAAA,GAAG,EAAEjB;AAH+C,GAArB,EAI9B,aAAa1G,aAAa,CAACwF,eAAe,CAACoC,QAAjB,EAA2B;AACtD5C,IAAAA,KAAK,EAAEuC;AAD+C,GAA3B,EAE1B,aAAavH,aAAa,CAACoG,IAAD,EAAO3D,QAAQ,CAAC,EAAD,EAAK8D,KAAL,EAAY;AACtD,2BAAuB,EAD+B;AAEtD,kBAAcsB,YAAY,CAAC1C,KAAD,CAF4B;AAGtD2C,IAAAA,GAAG,EAAElC;AAHiD,GAAZ,CAAf,EAIzB/E,UAAU,CAACoF,QAAD,CAAV,GAAuBA,QAAQ,CAAC;AAClCoB,IAAAA,EAAE,EAAEA,EAD8B;AAElCI,IAAAA,UAAU,EAAEvC,iBAAiB,CAACC,KAAD,CAFK;AAGlCJ,IAAAA,eAAe,EAAE,CAACc,qBAAqB,GAAGnB,IAAI,CAACK,eAA9B,KAAkD,IAAlD,GAAyDc,qBAAzD,GAAiF,IAHhE;AAIlCV,IAAAA,KAAK,EAAEA;AAJ2B,GAAD,CAA/B,GAKCc,QATwB,CAFA,CAJI,CAAjC;AAgBD,CA/E2C,CAA5C;AAgFA;AACA;AACA;;AAEA,IAAI8B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCvC,EAAAA,QAAQ,CAACwC,WAAT,GAAuB,UAAvB;AACAxC,EAAAA,QAAQ,CAACyC,SAAT,GAAqB;AACnBhC,IAAAA,EAAE,EAAE3F,SAAS,CAAC4H,GADK;AAEnBtC,IAAAA,QAAQ,EAAEtF,SAAS,CAAC6H,IAFD;AAGnBrC,IAAAA,WAAW,EAAExF,SAAS,CAAC8H;AAHJ,GAArB;AAKD,C,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIC,aAAa,GAAG,aAAa7H,gBAAgB,CAAC,SAAS6H,aAAT,CAAuBC,KAAvB,EAA8B5C,YAA9B,EAA4C;AAC5F,MAAI6C,QAAQ,GAAGD,KAAK,CAACrC,EAArB;AAAA,MACIC,IAAI,GAAGqC,QAAQ,KAAK,KAAK,CAAlB,GAAsB,OAAtB,GAAgCA,QAD3C;AAAA,MAEIC,mBAAmB,GAAGF,KAAK,CAACG,aAFhC;AAAA,MAGIA,aAAa,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,KAAjC,GAAyCA,mBAH7D;AAAA,MAIIE,kBAAkB,GAAGJ,KAAK,CAACK,YAJ/B;AAAA,MAKIA,YAAY,GAAGD,kBAAkB,KAAK,KAAK,CAA5B,GAAgC,IAAhC,GAAuCA,kBAL1D;AAAA,MAMIE,OAAO,GAAGN,KAAK,CAACM,OANpB;AAAA,MAOIC,QAAQ,GAAGP,KAAK,CAACO,QAPrB;AAAA,MAQIC,SAAS,GAAGR,KAAK,CAACQ,SARtB;AAAA,MASIC,MAAM,GAAGT,KAAK,CAACS,MATnB;AAAA,MAUIC,OAAO,GAAGV,KAAK,CAACU,OAVpB;AAAA,MAWIC,eAAe,GAAGX,KAAK,CAACxD,KAX5B;AAAA,MAYIuB,KAAK,GAAGzE,6BAA6B,CAAC0G,KAAD,EAAQ,CAAC,IAAD,EAAO,eAAP,EAAwB,cAAxB,EAAwC,SAAxC,EAAmD,UAAnD,EAA+D,WAA/D,EAA4E,QAA5E,EAAsF,SAAtF,EAAiG,OAAjG,CAAR,CAZzC,CAD4F,CAe5F;;;AACA,MAAIY,aAAa,GAAGrJ,MAAM,CAACoJ,eAAD,CAA1B;AAAA,MACIE,sBAAsB,GAAGD,aAAa,CAACE,OAD3C;;AAGA,MAAIC,yBAAyB,GAAGxJ,MAAM,CAAC,KAAD,CAAtC;AACAe,EAAAA,eAAe,CAAC,YAAY;AAC1ByI,IAAAA,yBAAyB,CAACD,OAA1B,GAAoC,IAApC;AACD,GAFc,EAEZ,CAACH,eAAD,CAFY,CAAf;;AAIA,MAAIK,iBAAiB,GAAGvJ,UAAU,CAACuF,eAAD,CAAlC;AAAA,MACIiE,qBAAqB,GAAGD,iBAAiB,CAAC9E,IAD9C;AAAA,MAEIK,eAAe,GAAG0E,qBAAqB,CAAC1E,eAF5C;AAAA,MAGIC,KAAK,GAAGyE,qBAAqB,CAACzE,KAHlC;AAAA,MAIIH,aAAa,GAAG4E,qBAAqB,CAAC5E,aAJ1C;AAAA,MAKI8B,QAAQ,GAAG6C,iBAAiB,CAAC7C,QALjC;AAAA,MAMIxB,KAAK,GAAGqE,iBAAiB,CAACrE,KAN9B;AAAA,MAOIgC,UAAU,GAAGqC,iBAAiB,CAACrC,UAPnC;AAAA,MAQIG,SAAS,GAAGkC,iBAAiB,CAAClC,SARlC;AAAA,MASIR,mBAAmB,GAAG0C,iBAAiB,CAAC1C,mBAT5C;AAAA,MAUId,WAAW,GAAGwD,iBAAiB,CAACxD,WAVpC;AAAA,MAWIyB,UAAU,GAAG+B,iBAAiB,CAAC/B,UAXnC;AAAA,MAYIpB,SAAS,GAAGmD,iBAAiB,CAACnD,SAZlC;AAAA,MAaIC,cAAc,GAAGkD,iBAAiB,CAAClD,cAbvC;;AAeA,MAAIwB,GAAG,GAAG/G,YAAY,CAAC4F,QAAD,EAAWf,YAAX,CAAtB,CAvC4F,CAuC5C;AAChD;;AAEA,MAAI8D,gBAAgB,GAAG3J,MAAM,CAAC,KAAD,CAA7B;AACA,MAAI4J,aAAa,GAAGC,UAAU,EAA9B;AACA,MAAIC,UAAU,GAAGC,OAAO,EAAxB;AACA,MAAIC,YAAY,GAAGZ,eAAe,IAAI,IAAtC,CA7C4F,CA6ChD;AAC5C;AACA;;AAEAlI,EAAAA,yBAAyB,CAAC,YAAY;AACpC6F,IAAAA,mBAAmB,CAACwC,OAApB,GAA8BT,YAA9B;AACD,GAFwB,EAEtB,CAACA,YAAD,EAAe/B,mBAAf,CAFsB,CAAzB;AAGA,MAAIkD,iBAAiB,GAAG9J,WAAW,CAAC,UAAU8E,KAAV,EAAiB;AACnD,QAAIA,KAAK,CAACiF,IAAN,OAAiB,EAArB,EAAyB;AACvB9C,MAAAA,UAAU,CAAC1D,KAAD,CAAV;AACD,KAFD,MAEO,IAAIuB,KAAK,KAAKqE,sBAAV,IAAoC,CAACE,yBAAyB,CAACD,OAAnE,EAA4E;AACjFnC,MAAAA,UAAU,CAACxD,cAAD,EAAiB;AACzBqB,QAAAA,KAAK,EAAEA;AADkB,OAAjB,CAAV;AAGD,KAJM,MAIA;AACLmC,MAAAA,UAAU,CAACzD,MAAD,EAAS;AACjBsB,QAAAA,KAAK,EAAEA;AADU,OAAT,CAAV;AAGD;AACF,GAZkC,EAYhC,CAACqE,sBAAD,EAAyBlC,UAAzB,CAZgC,CAAnC;AAaAhH,EAAAA,SAAS,CAAC,YAAY;AACpB;AACA;AACA;AACA,QAAI4J,YAAY,IAAIZ,eAAe,KAAKnE,KAApC,MAA+C;AACnDmE,IAAAA,eAAe,CAACc,IAAhB,OAA2B,EAA3B,GAAgC,CAACjF,KAAK,IAAI,EAAV,EAAciF,IAAd,OAAyB,EAAzD,GAA8D,IAD1D,CAAJ,EACqE;AACnED,MAAAA,iBAAiB,CAACb,eAAD,CAAjB;AACD;AACF,GARQ,EAQN,CAACA,eAAD,EAAkBa,iBAAlB,EAAqCD,YAArC,EAAmD/E,KAAnD,CARM,CAAT,CAjE4F,CAyE7B;AAC/D;AACA;;AAEA,WAASkF,YAAT,CAAsBvF,KAAtB,EAA6B;AAC3B,QAAIK,KAAK,GAAGL,KAAK,CAAC1C,MAAN,CAAa+C,KAAzB;;AAEA,QAAI,CAAC+E,YAAL,EAAmB;AACjBC,MAAAA,iBAAiB,CAAChF,KAAD,CAAjB;AACD;AACF;;AAED,WAASmF,WAAT,GAAuB;AACrB,QAAIxB,aAAJ,EAAmB;AACjBe,MAAAA,gBAAgB,CAACJ,OAAjB,GAA2B,IAA3B;AACD,KAHoB,CAGnB;AACF;AACA;;;AAGA,QAAItD,WAAW,IAAInB,aAAa,KAAKf,iBAArC,EAAwD;AACtDqD,MAAAA,UAAU,CAACjD,KAAD,CAAV;AACD;AACF;;AAED,WAASkG,WAAT,GAAuB;AACrB,QAAIV,gBAAgB,CAACJ,OAArB,EAA8B;AAC5BI,MAAAA,gBAAgB,CAACJ,OAAjB,GAA2B,KAA3B;AACA3C,MAAAA,QAAQ,CAAC2C,OAAT,CAAiBe,MAAjB;AACD;AACF;;AAED,MAAIC,UAAU,GAAGzB,YAAY,KAAK1D,KAAK,KAAK5B,UAAV,IAAwB4B,KAAK,KAAK3B,WAAvC,CAAZ,GAAkE;AACnFuB,EAAAA,eAAe,IAAIoE,eAAnB,IAAsCnE,KADrB,GAC6BmE,eAAe,IAAInE,KADjE;AAEA,SAAO,aAAahF,aAAa,CAACoG,IAAD,EAAO3D,QAAQ,CAAC;AAC/C,6BAAyBsC,eAAe,GAAGwF,MAAM,CAACC,QAAQ,CAACzF,eAAD,CAAT,CAAT,GAAuC0F,SADhC;AAE/C,yBAAqB,MAF0B;AAG/C,qBAAiBnD,SAH8B;AAI/C,qBAAiBG,UAJ8B;AAK/C,qBAAiB,SAL8B;AAM/C,kBAAcpB,SANiC;AAO/C,uBAAmBA,SAAS,GAAGoE,SAAH,GAAenE,cAPI;AAQ/CoE,IAAAA,IAAI,EAAE;AARyC,GAAD,EAS7CnE,KAT6C,EAStC;AACR,iCAA6B,EADrB;AAER,kBAAcsB,YAAY,CAAC1C,KAAD,CAFlB;AAGR2C,IAAAA,GAAG,EAAEA,GAHG;AAIRmB,IAAAA,MAAM,EAAE/H,SAAS,CAAC+H,MAAD,EAASY,UAAT,CAJT;AAKRd,IAAAA,QAAQ,EAAE7H,SAAS,CAAC6H,QAAD,EAAWmB,YAAX,CALX;AAMRpB,IAAAA,OAAO,EAAE5H,SAAS,CAAC4H,OAAD,EAAUsB,WAAV,CANV;AAORlB,IAAAA,OAAO,EAAEhI,SAAS,CAACgI,OAAD,EAAUiB,WAAV,CAPV;AAQRnB,IAAAA,SAAS,EAAE9H,SAAS,CAAC8H,SAAD,EAAYW,aAAZ,CARZ;AASR3E,IAAAA,KAAK,EAAEsF,UAAU,IAAI;AATb,GATsC,CAAf,CAAjC;AAoBD,CA/HgD,CAAjD;AAgIA;AACA;AACA;;AAEA,IAAIvC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCM,EAAAA,aAAa,CAACL,WAAd,GAA4B,eAA5B;AACD,C,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIyC,eAAe,GAAG,aAAajK,gBAAgB,CAAC,SAASiK,eAAT,CAAyBC,KAAzB,EAAgChF,YAAhC,EAA8C;AAChG,MAAIiF,QAAQ,GAAGD,KAAK,CAACzE,EAArB;AAAA,MACIC,IAAI,GAAGyE,QAAQ,KAAK,KAAK,CAAlB,GAAsB,KAAtB,GAA8BA,QADzC;AAAA,MAEI5E,QAAQ,GAAG2E,KAAK,CAAC3E,QAFrB;AAAA,MAGI6E,YAAY,GAAGF,KAAK,CAACG,MAHzB;AAAA,MAIIA,MAAM,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,IAA1B,GAAiCA,YAJ9C;AAAA,MAKI9B,SAAS,GAAG4B,KAAK,CAAC5B,SALtB;AAAA,MAMIC,MAAM,GAAG2B,KAAK,CAAC3B,MANnB;AAAA,MAOI+B,cAAc,GAAGJ,KAAK,CAACK,QAP3B;AAAA,MAQIA,QAAQ,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4BnJ,kBAA5B,GAAiDmJ,cARhE;AAAA,MASIzE,KAAK,GAAGzE,6BAA6B,CAAC8I,KAAD,EAAQ,CAAC,IAAD,EAAO,UAAP,EAAmB,QAAnB,EAA6B,WAA7B,EAA0C,QAA1C,EAAoD,UAApD,CAAR,CATzC;;AAWA,MAAIM,kBAAkB,GAAGjL,UAAU,CAACuF,eAAD,CAAnC;AAAA,MACIoB,UAAU,GAAGsE,kBAAkB,CAACtE,UADpC;AAAA,MAEID,QAAQ,GAAGuE,kBAAkB,CAACvE,QAFlC;AAAA,MAGIc,UAAU,GAAGyD,kBAAkB,CAACzD,UAHpC;AAAA,MAIItC,KAAK,GAAG+F,kBAAkB,CAAC/F,KAJ/B;;AAMA,MAAI2C,GAAG,GAAG/G,YAAY,CAAC6F,UAAD,EAAahB,YAAb,CAAtB;AACA,MAAI+D,aAAa,GAAGC,UAAU,EAA9B;AACA,MAAIC,UAAU,GAAGC,OAAO,EAAxB;AACA,MAAIqB,WAAW,GAAG;AAChB,mCAA+B,EADf;AAEhB,kBAActD,YAAY,CAAC1C,KAAD,CAFV;AAGhB6D,IAAAA,SAAS,EAAE9H,SAAS,CAAC8H,SAAD,EAAYW,aAAZ,CAHJ;AAIhBV,IAAAA,MAAM,EAAE/H,SAAS,CAAC+H,MAAD,EAASY,UAAT,CAJD;AAKhB;AACA;AACA;AACA;AACA;AACAuB,IAAAA,MAAM,EAAE,CAAC3D,UAVO;AAWhB4D,IAAAA,QAAQ,EAAE,CAAC,CAXK;AAYhBpF,IAAAA,QAAQ,EAAEA;AAZM,GAAlB;AAcA,SAAO8E,MAAM,GAAG,aAAa/K,aAAa,CAAC4B,OAAD,EAAUa,QAAQ,CAAC;AAC3D0D,IAAAA,EAAE,EAAEC;AADuD,GAAD,EAEzDG,KAFyD,EAElD;AACRuB,IAAAA,GAAG,EAAEA,GADG;AAERmD,IAAAA,QAAQ,EAAEA,QAFF;AAGRK,IAAAA,SAAS,EAAE3E;AAHH,GAFkD,EAMzDwE,WANyD,CAAlB,CAA7B,GAMM,aAAanL,aAAa,CAACoG,IAAD,EAAO3D,QAAQ,CAAC;AAC3DqF,IAAAA,GAAG,EAAEA;AADsD,GAAD,EAEzDvB,KAFyD,EAElD4E,WAFkD,CAAf,CAN7C;AASD,CA5CkD,CAAnD;;AA8CA,IAAIpD,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC0C,EAAAA,eAAe,CAACzC,WAAhB,GAA8B,iBAA9B;AACD;AACD;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIqD,YAAY,GAAG,aAAa7K,gBAAgB,CAAC,SAAS6K,YAAT,CAAsBC,KAAtB,EAA6B5F,YAA7B,EAA2C;AAC1F,MAAI6F,qBAAqB,GAAGD,KAAK,CAAClG,gBAAlC;AAAA,MACIA,gBAAgB,GAAGmG,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBADlE;AAAA,MAEIC,QAAQ,GAAGF,KAAK,CAACrF,EAFrB;AAAA,MAGIC,IAAI,GAAGsF,QAAQ,KAAK,KAAK,CAAlB,GAAsB,IAAtB,GAA6BA,QAHxC;AAAA,MAIInF,KAAK,GAAGzE,6BAA6B,CAAC0J,KAAD,EAAQ,CAAC,kBAAD,EAAqB,IAArB,CAAR,CAJzC;;AAMA,MAAIG,kBAAkB,GAAG1L,UAAU,CAACuF,eAAD,CAAnC;AAAA,MACIuB,mBAAmB,GAAG4E,kBAAkB,CAAC5E,mBAD7C;AAAA,MAEIO,SAAS,GAAGqE,kBAAkB,CAACrE,SAFnC;;AAIA,MAAIhC,gBAAJ,EAAsB;AACpByB,IAAAA,mBAAmB,CAACuC,OAApB,GAA8B,IAA9B;AACD;;AAED,SAAO,aAAatJ,aAAa,CAACoG,IAAD,EAAO3D,QAAQ,CAAC;AAC/CiI,IAAAA,IAAI,EAAE;AADyC,GAAD,EAE7CnE,KAF6C,EAEtC;AACRuB,IAAAA,GAAG,EAAElC,YADG;AAER,gCAA4B,EAFpB;AAGRyB,IAAAA,EAAE,EAAEC;AAHI,GAFsC,CAAf,CAAjC;AAOD,CAtB+C,CAAhD;AAuBA;AACA;AACA;;AAEA,IAAIS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCsD,EAAAA,YAAY,CAACrD,WAAb,GAA2B,cAA3B;AACD,C,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAI0D,cAAc,GAAG,aAAalL,gBAAgB,CAAC,SAASkL,cAAT,CAAwBC,KAAxB,EAA+BjG,YAA/B,EAA6C;AAC9F,MAAIkG,QAAQ,GAAGD,KAAK,CAAC1F,EAArB;AAAA,MACIC,IAAI,GAAG0F,QAAQ,KAAK,KAAK,CAAlB,GAAsB,IAAtB,GAA6BA,QADxC;AAAA,MAEI7F,QAAQ,GAAG4F,KAAK,CAAC5F,QAFrB;AAAA,MAGIjB,KAAK,GAAG6G,KAAK,CAAC7G,KAHlB;AAAA,MAII8D,OAAO,GAAG+C,KAAK,CAAC/C,OAJpB;AAAA,MAKIvC,KAAK,GAAGzE,6BAA6B,CAAC+J,KAAD,EAAQ,CAAC,IAAD,EAAO,UAAP,EAAmB,OAAnB,EAA4B,SAA5B,CAAR,CALzC;;AAOA,MAAIE,kBAAkB,GAAG9L,UAAU,CAACuF,eAAD,CAAnC;AAAA,MACIM,QAAQ,GAAGiG,kBAAkB,CAACjG,QADlC;AAAA,MAEIf,eAAe,GAAGgH,kBAAkB,CAACrH,IAAnB,CAAwBK,eAF9C;AAAA,MAGIoC,UAAU,GAAG4E,kBAAkB,CAAC5E,UAHpC;;AAKA,MAAI6E,MAAM,GAAGjM,MAAM,CAAC,IAAD,CAAnB;AACA,MAAI+H,GAAG,GAAG/G,YAAY,CAAC6E,YAAD,EAAeoG,MAAf,CAAtB;AACA,MAAIC,KAAK,GAAGzK,aAAa,CAAC;AACxB0K,IAAAA,OAAO,EAAEF,MAAM,CAAC1C,OADQ;AAExBtE,IAAAA,KAAK,EAAEA;AAFiB,GAAD,EAGtBO,yBAHsB,CAAzB;AAIA,MAAI4G,QAAQ,GAAGpH,eAAe,KAAKC,KAAnC;;AAEA,MAAIoF,WAAW,GAAG,SAASA,WAAT,GAAuB;AACvCtE,IAAAA,QAAQ,IAAIA,QAAQ,CAACd,KAAD,CAApB;AACAmC,IAAAA,UAAU,CAACrD,iBAAD,EAAoB;AAC5BkB,MAAAA,KAAK,EAAEA;AADqB,KAApB,CAAV;AAGD,GALD;;AAOA,SAAO,aAAahF,aAAa,CAACyF,aAAa,CAACmC,QAAf,EAAyB;AACxD5C,IAAAA,KAAK,EAAE;AACLA,MAAAA,KAAK,EAAEA,KADF;AAELiH,MAAAA,KAAK,EAAEA;AAFF;AADiD,GAAzB,EAK9B,aAAajM,aAAa,CAACoG,IAAD,EAAO3D,QAAQ,CAAC;AAC3C,qBAAiB0J,QAD0B;AAE3CzB,IAAAA,IAAI,EAAE;AAFqC,GAAD,EAGzCnE,KAHyC,EAGlC;AACR,kCAA8B,EADtB;AAERuB,IAAAA,GAAG,EAAEA,GAFG;AAGRT,IAAAA,EAAE,EAAEkD,MAAM,CAACC,QAAQ,CAACxF,KAAD,CAAT,CAHF;AAIR,wBAAoBmH,QAAQ,GAAG,EAAH,GAAQ1B,SAJ5B,CAIsC;AAC9C;AACA;AANQ;AAQRY,IAAAA,QAAQ,EAAE,CAAC,CARH;AASRvC,IAAAA,OAAO,EAAE5H,SAAS,CAAC4H,OAAD,EAAUsB,WAAV;AATV,GAHkC,CAAf,EAazBnE,QAAQ,GAAGpF,UAAU,CAACoF,QAAD,CAAV,GAAuBA,QAAQ,CAAC;AAC7CjB,IAAAA,KAAK,EAAEA,KADsC;AAE7CiH,IAAAA,KAAK,EAAEA;AAFsC,GAAD,CAA/B,GAGVhG,QAHO,GAGI,aAAajG,aAAa,CAACoM,kBAAD,EAAqB,IAArB,CAhBb,CALI,CAAjC;AAsBD,CAlDiD,CAAlD;AAmDA;AACA;AACA;;AAEA,IAAIrE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC2D,EAAAA,cAAc,CAAC1D,WAAf,GAA6B,gBAA7B;AACD,C,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASkE,kBAAT,GAA8B;AAC5B,MAAIC,kBAAkB,GAAGpM,UAAU,CAACwF,aAAD,CAAnC;AAAA,MACIT,KAAK,GAAGqH,kBAAkB,CAACrH,KAD/B;;AAGA,MAAIsH,kBAAkB,GAAGrM,UAAU,CAACuF,eAAD,CAAnC;AAAA,MACI+G,YAAY,GAAGD,kBAAkB,CAAC5H,IAAnB,CAAwBM,KAD3C;;AAGA,MAAIwH,OAAO,GAAGpM,OAAO,CAAC,YAAY;AAChC,WAAOsB,OAAO,CAAC;AACb+K,MAAAA,WAAW,EAAEC,YAAY,CAACH,YAAY,IAAI,EAAjB,CAAZ,CAAiCI,KAAjC,CAAuC,KAAvC,CADA;AAEbC,MAAAA,eAAe,EAAE5H;AAFJ,KAAD,CAAd;AAID,GALoB,EAKlB,CAACuH,YAAD,EAAevH,KAAf,CALkB,CAArB;AAMA,SAAO,aAAahF,aAAa,CAACK,QAAD,EAAW,IAAX,EAAiBmM,OAAO,CAACjK,MAAR,GAAiBiK,OAAO,CAACK,GAAR,CAAY,UAAUC,MAAV,EAAkBb,KAAlB,EAAyB;AACtG,QAAIc,GAAG,GAAG/H,KAAK,CAACgI,KAAN,CAAYF,MAAM,CAACG,KAAnB,EAA0BH,MAAM,CAACI,GAAjC,CAAV;AACA,WAAO,aAAalN,aAAa,CAAC,MAAD,EAAS;AACxCqC,MAAAA,GAAG,EAAE4J,KADmC;AAExC,yCAAmC,EAFK;AAGxC,yBAAmBa,MAAM,CAACK,SAAP,GAAmB,IAAnB,GAA0B1C,SAHL;AAIxC,8BAAwBqC,MAAM,CAACK,SAAP,GAAmB1C,SAAnB,GAA+B;AAJf,KAAT,EAK9BsC,GAL8B,CAAjC;AAMD,GARkE,CAAjB,GAQ7C/H,KAR4B,CAAjC;AASD;;AAED,IAAI+C,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCmE,EAAAA,kBAAkB,CAAClE,WAAnB,GAAiC,oBAAjC;AACD,C,CAAC;;AAEF;AACA;AACA;;;AAGA,IAAIkF,cAAc,GAAG,aAAa1M,gBAAgB,CAAC,SAAS0M,cAAT,CAAwBC,KAAxB,EAA+BzH,YAA/B,EAA6C;AAC9F,MAAI0H,QAAQ,GAAGD,KAAK,CAAClH,EAArB;AAAA,MACIC,IAAI,GAAGkH,QAAQ,KAAK,KAAK,CAAlB,GAAsB,QAAtB,GAAiCA,QAD5C;AAAA,MAEIxE,OAAO,GAAGuE,KAAK,CAACvE,OAFpB;AAAA,MAGIE,SAAS,GAAGqE,KAAK,CAACrE,SAHtB;AAAA,MAIIzC,KAAK,GAAGzE,6BAA6B,CAACuL,KAAD,EAAQ,CAAC,IAAD,EAAO,SAAP,EAAkB,WAAlB,CAAR,CAJzC;;AAMA,MAAIE,kBAAkB,GAAGtN,UAAU,CAACuF,eAAD,CAAnC;AAAA,MACI2B,UAAU,GAAGoG,kBAAkB,CAACpG,UADpC;AAAA,MAEIhC,KAAK,GAAGoI,kBAAkB,CAACpI,KAF/B;AAAA,MAGI0B,SAAS,GAAG0G,kBAAkB,CAAC1G,SAHnC;AAAA,MAIIS,SAAS,GAAGiG,kBAAkB,CAACjG,SAJnC;AAAA,MAKIG,UAAU,GAAG8F,kBAAkB,CAAC9F,UALpC;;AAOA,MAAIK,GAAG,GAAG/G,YAAY,CAAC8F,SAAD,EAAYjB,YAAZ,CAAtB;AACA,MAAI+D,aAAa,GAAGC,UAAU,EAA9B;;AAEA,MAAIQ,WAAW,GAAG,SAASA,WAAT,GAAuB;AACvC,QAAIjF,KAAK,KAAK9B,IAAd,EAAoB;AAClB8D,MAAAA,UAAU,CAAChD,gBAAD,CAAV;AACD,KAFD,MAEO;AACLgD,MAAAA,UAAU,CAAC/C,iBAAD,CAAV;AACD;AACF,GAND;;AAQA,SAAO,aAAapE,aAAa,CAACoG,IAAD,EAAO3D,QAAQ,CAAC;AAC/C,qBAAiB6E,SAD8B;AAE/C,qBAAiB,SAF8B;AAG/C,qBAAiBG;AAH8B,GAAD,EAI7ClB,KAJ6C,EAItC;AACR,kCAA8B,EADtB;AAERuB,IAAAA,GAAG,EAAEA,GAFG;AAGRgB,IAAAA,OAAO,EAAE5H,SAAS,CAAC4H,OAAD,EAAUsB,WAAV,CAHV;AAIRpB,IAAAA,SAAS,EAAE9H,SAAS,CAAC8H,SAAD,EAAYW,aAAZ;AAJZ,GAJsC,CAAf,CAAjC;AAUD,CAnCiD,CAAlD;;AAqCA,IAAI5B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCmF,EAAAA,cAAc,CAAClF,WAAf,GAA6B,gBAA7B;AACD,C,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASd,kBAAT,CAA4BvC,aAA5B,EAA2C8B,QAA3C,EAAqD;AACnD;AACA;AACA;AACA;AACA1F,EAAAA,yBAAyB,CAAC,YAAY;AACpC,QAAI4D,aAAa,KAAKjB,QAAlB,IAA8BiB,aAAa,KAAKd,MAAhD,IAA0Dc,aAAa,KAAKf,iBAA5E,IAAiGe,aAAa,KAAKV,gBAAvH,EAAyI;AACvIwC,MAAAA,QAAQ,CAAC2C,OAAT,CAAiBkE,KAAjB;AACD;AACF,GAJwB,EAItB,CAAC7G,QAAD,EAAW9B,aAAX,CAJsB,CAAzB;AAKD;AACD;AACA;AACA;AACA;;;AAGA,SAAS+E,UAAT,GAAsB;AACpB,MAAI6D,kBAAkB,GAAGxN,UAAU,CAACuF,eAAD,CAAnC;AAAA,MACIT,eAAe,GAAG0I,kBAAkB,CAAC/I,IAAnB,CAAwBK,eAD9C;AAAA,MAEIe,QAAQ,GAAG2H,kBAAkB,CAAC3H,QAFlC;AAAA,MAGIX,KAAK,GAAGsI,kBAAkB,CAACtI,KAH/B;AAAA,MAIIgC,UAAU,GAAGsG,kBAAkB,CAACtG,UAJpC;AAAA,MAKIL,mBAAmB,GAAG2G,kBAAkB,CAAC3G,mBAL7C;AAAA,MAMIC,mBAAmB,GAAG0G,kBAAkB,CAAC1G,mBAN7C;;AAQA,MAAIN,OAAO,GAAGhF,cAAc,CAAC8D,yBAAD,CAA5B;AACA,SAAO,SAASoE,aAAT,CAAuBhF,KAAvB,EAA8B;AACnC,QAAIsH,KAAK,GAAGxF,OAAO,CAACiH,SAAR,CAAkB,UAAUC,KAAV,EAAiB;AAC7C,UAAI3I,KAAK,GAAG2I,KAAK,CAAC3I,KAAlB;AACA,aAAOA,KAAK,KAAKD,eAAjB;AACD,KAHW,CAAZ;;AAKA,aAAS6I,aAAT,GAAyB;AACvB,UAAIC,QAAQ,GAAG5B,KAAK,KAAKxF,OAAO,CAAClE,MAAR,GAAiB,CAA1C;;AAEA,UAAIsL,QAAJ,EAAc;AACZ,YAAI/G,mBAAmB,CAACwC,OAAxB,EAAiC;AAC/B;AACA;AACA;AACA,iBAAO,IAAP;AACD,SALD,MAKO;AACL;AACA,iBAAOwE,cAAc,EAArB;AACD;AACF,OAVD,MAUO;AACL;AACA,eAAOrH,OAAO,CAAC,CAACwF,KAAK,GAAG,CAAT,IAAcxF,OAAO,CAAClE,MAAvB,CAAd;AACD;AACF;;AAED,aAASwL,iBAAT,GAA6B;AAC3B,UAAIC,KAAK,GAAG/B,KAAK,KAAK,CAAtB;;AAEA,UAAI+B,KAAJ,EAAW;AACT,YAAIlH,mBAAmB,CAACwC,OAAxB,EAAiC;AAC/B;AACA;AACA;AACA,iBAAO,IAAP;AACD,SALD,MAKO;AACL;AACA,iBAAO2E,aAAa,EAApB;AACD;AACF,OAVD,MAUO,IAAIhC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACvB;AACA,eAAOgC,aAAa,EAApB;AACD,OAHM,MAGA;AACL;AACA,eAAOxH,OAAO,CAAC,CAACwF,KAAK,GAAG,CAAR,GAAYxF,OAAO,CAAClE,MAArB,IAA+BkE,OAAO,CAAClE,MAAxC,CAAd;AACD;AACF;;AAED,aAASuL,cAAT,GAA0B;AACxB,aAAOrH,OAAO,CAAC,CAAD,CAAd;AACD;;AAED,aAASwH,aAAT,GAAyB;AACvB,aAAOxH,OAAO,CAACA,OAAO,CAAClE,MAAR,GAAiB,CAAlB,CAAd;AACD;;AAED,YAAQoC,KAAK,CAACtC,GAAd;AACE,WAAK,WAAL;AACE;AACAsC,QAAAA,KAAK,CAACuJ,cAAN;;AAEA,YAAI,CAACzH,OAAD,IAAY,CAACA,OAAO,CAAClE,MAAzB,EAAiC;AAC/B;AACD;;AAED,YAAI4C,KAAK,KAAK9B,IAAd,EAAoB;AAClB;AACA8D,UAAAA,UAAU,CAACvD,QAAD,EAAW;AACnB0B,YAAAA,gBAAgB,EAAEyB,mBAAmB,CAACuC;AADnB,WAAX,CAAV;AAGD,SALD,MAKO;AACL,cAAI6E,IAAI,GAAGP,aAAa,EAAxB;AACAzG,UAAAA,UAAU,CAACvD,QAAD,EAAW;AACnBoB,YAAAA,KAAK,EAAEmJ,IAAI,GAAGA,IAAI,CAACnJ,KAAR,GAAgB;AADR,WAAX,CAAV;AAGD;;AAED;AACF;;AAEA,WAAK,SAAL;AACE;AACAL,QAAAA,KAAK,CAACuJ,cAAN;;AAEA,YAAI,CAACzH,OAAD,IAAYA,OAAO,CAAClE,MAAR,KAAmB,CAAnC,EAAsC;AACpC;AACD;;AAED,YAAI4C,KAAK,KAAK9B,IAAd,EAAoB;AAClB8D,UAAAA,UAAU,CAACvD,QAAD,CAAV;AACD,SAFD,MAEO;AACL,cAAIwK,IAAI,GAAGL,iBAAiB,EAA5B;AACA5G,UAAAA,UAAU,CAACvD,QAAD,EAAW;AACnBoB,YAAAA,KAAK,EAAEoJ,IAAI,GAAGA,IAAI,CAACpJ,KAAR,GAAgB;AADR,WAAX,CAAV;AAGD;;AAED;;AAEF,WAAK,MAAL;AACA,WAAK,QAAL;AACE;AACAL,QAAAA,KAAK,CAACuJ,cAAN;;AAEA,YAAI,CAACzH,OAAD,IAAYA,OAAO,CAAClE,MAAR,KAAmB,CAAnC,EAAsC;AACpC;AACD;;AAED,YAAI4C,KAAK,KAAK9B,IAAd,EAAoB;AAClB8D,UAAAA,UAAU,CAACvD,QAAD,CAAV;AACD,SAFD,MAEO;AACLuD,UAAAA,UAAU,CAACvD,QAAD,EAAW;AACnBoB,YAAAA,KAAK,EAAE8I,cAAc,GAAG9I;AADL,WAAX,CAAV;AAGD;;AAED;;AAEF,WAAK,KAAL;AACA,WAAK,UAAL;AACE;AACAL,QAAAA,KAAK,CAACuJ,cAAN;;AAEA,YAAI,CAACzH,OAAD,IAAYA,OAAO,CAAClE,MAAR,KAAmB,CAAnC,EAAsC;AACpC;AACD;;AAED,YAAI4C,KAAK,KAAK9B,IAAd,EAAoB;AAClB8D,UAAAA,UAAU,CAACvD,QAAD,CAAV;AACD,SAFD,MAEO;AACLuD,UAAAA,UAAU,CAACvD,QAAD,EAAW;AACnBoB,YAAAA,KAAK,EAAEiJ,aAAa,GAAGjJ;AADJ,WAAX,CAAV;AAGD;;AAED;;AAEF,WAAK,QAAL;AACE,YAAIG,KAAK,KAAK9B,IAAd,EAAoB;AAClB8D,UAAAA,UAAU,CAACpD,MAAD,CAAV;AACD;;AAED;;AAEF,WAAK,OAAL;AACE,YAAIoB,KAAK,KAAK5B,UAAV,IAAwBwB,eAAe,KAAK,IAAhD,EAAsD;AACpD;AACAJ,UAAAA,KAAK,CAACuJ,cAAN;AACApI,UAAAA,QAAQ,IAAIA,QAAQ,CAACf,eAAD,CAApB;AACAoC,UAAAA,UAAU,CAACtD,oBAAD,CAAV;AACD;;AAED;AAhGJ;AAkGD,GAzJD;AA0JD;;AAED,SAASiG,OAAT,GAAmB;AACjB,MAAIuE,kBAAkB,GAAGpO,UAAU,CAACuF,eAAD,CAAnC;AAAA,MACIL,KAAK,GAAGkJ,kBAAkB,CAAClJ,KAD/B;AAAA,MAEIgC,UAAU,GAAGkH,kBAAkB,CAAClH,UAFpC;AAAA,MAGIP,UAAU,GAAGyH,kBAAkB,CAACzH,UAHpC;AAAA,MAIID,QAAQ,GAAG0H,kBAAkB,CAAC1H,QAJlC;AAAA,MAKIE,SAAS,GAAGwH,kBAAkB,CAACxH,SALnC;;AAOA,MAAIyH,MAAM,GAAGnN,UAAU,CAAC,YAAY;AAClC,WAAO,IAAIoN,GAAJ,EAAP;AACD,GAFsB,CAAvB;AAGApO,EAAAA,SAAS,CAAC,YAAY;AACpB,WAAO,YAAY;AACjB;AACAmO,MAAAA,MAAM,CAAChF,OAAP,CAAekF,OAAf,CAAuB,UAAUnH,EAAV,EAAc;AACnC,eAAOoH,oBAAoB,CAACpH,EAAD,CAA3B;AACD,OAFD;AAGD,KALD;AAMD,GAPQ,EAON,CAACiH,MAAD,CAPM,CAAT;AAQA,SAAO,SAASzE,UAAT,GAAsB;AAC3B,QAAI6E,aAAa,GAAG1N,gBAAgB,CAAC4F,UAAU,CAAC0C,OAAZ,CAApC;;AAEA,QAAI,CAACoF,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIC,KAAK,GAAGC,qBAAqB,CAAC,YAAY;AAC5C;AACA,UAAIF,aAAa,CAACG,aAAd,KAAgClI,QAAQ,CAAC2C,OAAzC,IAAoDoF,aAAa,CAACG,aAAd,KAAgChI,SAAS,CAACyC,OAA9F,IAAyG1C,UAAU,CAAC0C,OAAxH,EAAiI;AAC/H,YAAI1C,UAAU,CAAC0C,OAAX,CAAmBwF,QAAnB,CAA4BJ,aAAa,CAACG,aAA1C,CAAJ,EAA8D;AAC5D;AACA,cAAI1J,KAAK,KAAK3B,WAAd,EAA2B;AACzB2D,YAAAA,UAAU,CAAClD,QAAD,CAAV;AACD;AACF,SALD,MAKO;AACL;AACAkD,UAAAA,UAAU,CAACnD,IAAD,CAAV;AACD;AACF;AACF,KAbgC,CAAjC;AAcAsK,IAAAA,MAAM,CAAChF,OAAP,CAAeyF,GAAf,CAAmBJ,KAAnB;AACD,GAtBD;AAuBD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASzH,iBAAT,CAA2B8H,KAA3B,EAAkCvK,OAAlC,EAA2CwK,WAA3C,EAAwD;AACtD,MAAIC,eAAe,GAAG5O,QAAQ,CAAC0O,KAAK,CAAC1K,OAAP,CAA9B;AAAA,MACIa,KAAK,GAAG+J,eAAe,CAAC,CAAD,CAD3B;AAAA,MAEIC,QAAQ,GAAGD,eAAe,CAAC,CAAD,CAF9B;;AAIA,MAAIE,iBAAiB,GAAG7O,UAAU,CAACkE,OAAD,EAAUwK,WAAV,CAAlC;AAAA,MACIvK,IAAI,GAAG0K,iBAAiB,CAAC,CAAD,CAD5B;AAAA,MAEIC,QAAQ,GAAGD,iBAAiB,CAAC,CAAD,CAFhC;;AAIA,MAAIjI,UAAU,GAAG,SAASA,UAAT,CAAoBxC,KAApB,EAA2B2K,OAA3B,EAAoC;AACnD,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,MAAAA,OAAO,GAAG,EAAV;AACD;;AAED,QAAIC,YAAY,GAAGP,KAAK,CAACzK,MAAN,CAAaY,KAAb,CAAnB;AACA,QAAIP,SAAS,GAAG2K,YAAY,IAAIA,YAAY,CAAC/K,EAAb,CAAgBG,KAAhB,CAAhC;;AAEA,QAAIC,SAAJ,EAAe;AACbyK,MAAAA,QAAQ,CAAC5M,QAAQ,CAAC;AAChBqC,QAAAA,IAAI,EAAEH,KADU;AAEhBQ,QAAAA,KAAK,EAAEA,KAFS;AAGhBP,QAAAA,SAAS,EAAEO;AAHK,OAAD,EAIdmK,OAJc,CAAT,CAAR;AAKAH,MAAAA,QAAQ,CAACvK,SAAD,CAAR;AACA;AACD;AACF,GAjBD;;AAmBA,SAAO,CAACO,KAAD,EAAQT,IAAR,EAAcyC,UAAd,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASqD,QAAT,CAAkBuC,GAAlB,EAAuB;AACrB,MAAIyC,IAAI,GAAG,CAAX;;AAEA,MAAIzC,GAAG,CAACxK,MAAJ,KAAe,CAAnB,EAAsB;AACpB,WAAOiN,IAAP;AACD;;AAED,OAAK,IAAIlN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyK,GAAG,CAACxK,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAImN,KAAK,GAAG1C,GAAG,CAAC2C,UAAJ,CAAepN,CAAf,CAAZ;;AAEAkN,IAAAA,IAAI,GAAG,CAACA,IAAI,IAAI,CAAT,IAAcA,IAAd,GAAqBC,KAA5B;AACAD,IAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAd;AACD;;AAED,SAAOA,IAAP;AACD;;AAED,SAAS3H,YAAT,CAAsB1C,KAAtB,EAA6B;AAC3B,SAAOA,KAAK,CAACwK,WAAN,EAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASjD,YAAT,CAAsBK,GAAtB,EAA2B;AACzB,SAAOxC,MAAM,CAACwC,GAAD,CAAN,CAAY6C,OAAZ,CAAoB,2BAApB,EAAiD,MAAjD,CAAP;AACD,C,CAAC;;AAEF;AACA;AACA;AACA;AACA;;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,MAAIC,mBAAmB,GAAG7P,UAAU,CAACuF,eAAD,CAApC;AAAA,MACIiC,UAAU,GAAGqI,mBAAmB,CAACrI,UADrC;AAAA,MAEID,UAAU,GAAGsI,mBAAmB,CAACtI,UAFrC;AAAA,MAGI9C,IAAI,GAAGoL,mBAAmB,CAACpL,IAH/B;AAAA,MAIIS,KAAK,GAAG2K,mBAAmB,CAAC3K,KAJhC;;AAMA,MAAIJ,eAAe,GAAGL,IAAI,CAACK,eAA3B;AACA,SAAO3E,OAAO,CAAC,YAAY;AACzB,WAAO;AACLiH,MAAAA,EAAE,EAAEG,UADC;AAELC,MAAAA,UAAU,EAAEA,UAFP;AAGL1C,MAAAA,eAAe,EAAEA,eAAe,IAAI,IAAnB,GAA0BA,eAA1B,GAA4C,IAHxD;AAILI,MAAAA,KAAK,EAAEA;AAJF,KAAP;AAMD,GAPa,EAOX,CAACqC,UAAD,EAAaC,UAAb,EAAyB1C,eAAzB,EAA0CI,KAA1C,CAPW,CAAd;AAQD;AACD;AACA;AACA;AACA;AACA;;;AAEA,SAAS4K,wBAAT,GAAoC;AAClC,MAAIC,mBAAmB,GAAG/P,UAAU,CAACwF,aAAD,CAApC;AAAA,MACIT,KAAK,GAAGgL,mBAAmB,CAAChL,KADhC;AAAA,MAEIiH,KAAK,GAAG+D,mBAAmB,CAAC/D,KAFhC;;AAIA,SAAO7L,OAAO,CAAC,YAAY;AACzB,WAAO;AACL4E,MAAAA,KAAK,EAAEA,KADF;AAELiH,MAAAA,KAAK,EAAEA;AAFF,KAAP;AAID,GALa,EAKX,CAACjH,KAAD,EAAQiH,KAAR,CALW,CAAd;AAMD,C,CAAC;AACF;AACA;AACA;AACA;;;AAEA,SAASvG,QAAT,EAAmB0H,cAAnB,EAAmC7E,aAAnC,EAAkDgD,YAAlD,EAAgEK,cAAhE,EAAgFQ,kBAAhF,EAAoGzB,eAApG,EAAqH+B,YAArH,EAAmImD,kBAAnI,EAAuJE,wBAAvJ","sourcesContent":["import { useRef, createElement, useContext, useCallback, useEffect, useMemo, Fragment, useState, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createNamedContext, forwardRefWithAs, makeId, useCheckStyles, isFunction, useUpdateEffect, useForkedRef, getOwnerDocument, useIsomorphicLayoutEffect, wrapEvent, useLazyRef, noop } from '@reach/utils';\r\nimport { createDescendantContext, useDescendantsInit, DescendantProvider, useDescendant, useDescendants } from '@reach/descendants';\r\nimport { findAll } from 'highlight-words-core';\r\nimport { useId } from '@reach/auto-id';\r\nimport { Popover, positionMatchWidth } from '@reach/popover';\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nvar _on, _on2, _on3, _on4, _states;\r\n////////////////////////////////////////////////////////////////////////////////\r\n// States\r\n// Nothing going on, waiting for the user to type or use the arrow keys\r\nvar IDLE = \"IDLE\"; // The component is suggesting options as the user types\r\n\r\nvar SUGGESTING = \"SUGGESTING\"; // The user is using the keyboard to navigate the list, not typing\r\n\r\nvar NAVIGATING = \"NAVIGATING\"; // The user is interacting with arbitrary elements inside the popup that\r\n// are not ComboboxInputs\r\n\r\nvar INTERACTING = \"INTERACTING\"; ////////////////////////////////////////////////////////////////////////////////\r\n// Events\r\n// User cleared the value w/ backspace, but input still has focus\r\n\r\nvar CLEAR = \"CLEAR\"; // User is typing\r\n\r\nvar CHANGE = \"CHANGE\"; // Initial input value change handler for syncing user state with state machine\r\n// Prevents initial change from sending the user to the NAVIGATING state\r\n// https://github.com/reach/reach-ui/issues/464\r\n\r\nvar INITIAL_CHANGE = \"INITIAL_CHANGE\"; // User is navigating w/ the keyboard\r\n\r\nvar NAVIGATE = \"NAVIGATE\"; // User can be navigating with keyboard and then click instead, we want the\r\n// value from the click, not the current nav item\r\n\r\nvar SELECT_WITH_KEYBOARD = \"SELECT_WITH_KEYBOARD\";\r\nvar SELECT_WITH_CLICK = \"SELECT_WITH_CLICK\"; // Pretty self-explanatory, user can hit escape or blur to close the popover\r\n\r\nvar ESCAPE = \"ESCAPE\";\r\nvar BLUR = \"BLUR\"; // The user left the input to interact with arbitrary elements inside the popup\r\n\r\nvar INTERACT = \"INTERACT\";\r\nvar FOCUS = \"FOCUS\";\r\nvar OPEN_WITH_BUTTON = \"OPEN_WITH_BUTTON\";\r\nvar CLOSE_WITH_BUTTON = \"CLOSE_WITH_BUTTON\"; ////////////////////////////////////////////////////////////////////////////////\r\n\r\nvar stateChart = {\r\n  initial: IDLE,\r\n  states: (_states = {}, _states[IDLE] = {\r\n    on: (_on = {}, _on[BLUR] = IDLE, _on[CLEAR] = IDLE, _on[CHANGE] = SUGGESTING, _on[INITIAL_CHANGE] = IDLE, _on[FOCUS] = SUGGESTING, _on[NAVIGATE] = NAVIGATING, _on[OPEN_WITH_BUTTON] = SUGGESTING, _on)\r\n  }, _states[SUGGESTING] = {\r\n    on: (_on2 = {}, _on2[CHANGE] = SUGGESTING, _on2[FOCUS] = SUGGESTING, _on2[NAVIGATE] = NAVIGATING, _on2[CLEAR] = IDLE, _on2[ESCAPE] = IDLE, _on2[BLUR] = IDLE, _on2[SELECT_WITH_CLICK] = IDLE, _on2[INTERACT] = INTERACTING, _on2[CLOSE_WITH_BUTTON] = IDLE, _on2)\r\n  }, _states[NAVIGATING] = {\r\n    on: (_on3 = {}, _on3[CHANGE] = SUGGESTING, _on3[FOCUS] = SUGGESTING, _on3[CLEAR] = IDLE, _on3[BLUR] = IDLE, _on3[ESCAPE] = IDLE, _on3[NAVIGATE] = NAVIGATING, _on3[SELECT_WITH_CLICK] = IDLE, _on3[SELECT_WITH_KEYBOARD] = IDLE, _on3[CLOSE_WITH_BUTTON] = IDLE, _on3[INTERACT] = INTERACTING, _on3)\r\n  }, _states[INTERACTING] = {\r\n    on: (_on4 = {}, _on4[CLEAR] = IDLE, _on4[CHANGE] = SUGGESTING, _on4[FOCUS] = SUGGESTING, _on4[BLUR] = IDLE, _on4[ESCAPE] = IDLE, _on4[NAVIGATE] = NAVIGATING, _on4[CLOSE_WITH_BUTTON] = IDLE, _on4[SELECT_WITH_CLICK] = IDLE, _on4)\r\n  }, _states)\r\n};\r\n\r\nvar reducer = function reducer(data, event) {\r\n  var nextState = _extends({}, data, {\r\n    lastEventType: event.type\r\n  });\r\n\r\n  switch (event.type) {\r\n    case CHANGE:\r\n    case INITIAL_CHANGE:\r\n      return _extends({}, nextState, {\r\n        navigationValue: null,\r\n        value: event.value\r\n      });\r\n\r\n    case NAVIGATE:\r\n    case OPEN_WITH_BUTTON:\r\n      return _extends({}, nextState, {\r\n        navigationValue: findNavigationValue(nextState, event)\r\n      });\r\n\r\n    case CLEAR:\r\n      return _extends({}, nextState, {\r\n        value: \"\",\r\n        navigationValue: null\r\n      });\r\n\r\n    case BLUR:\r\n    case ESCAPE:\r\n      return _extends({}, nextState, {\r\n        navigationValue: null\r\n      });\r\n\r\n    case SELECT_WITH_CLICK:\r\n      return _extends({}, nextState, {\r\n        value: event.value,\r\n        navigationValue: null\r\n      });\r\n\r\n    case SELECT_WITH_KEYBOARD:\r\n      return _extends({}, nextState, {\r\n        value: data.navigationValue,\r\n        navigationValue: null\r\n      });\r\n\r\n    case CLOSE_WITH_BUTTON:\r\n      return _extends({}, nextState, {\r\n        navigationValue: null\r\n      });\r\n\r\n    case INTERACT:\r\n      return nextState;\r\n\r\n    case FOCUS:\r\n      return _extends({}, nextState, {\r\n        navigationValue: findNavigationValue(nextState, event)\r\n      });\r\n\r\n    default:\r\n      return nextState;\r\n  }\r\n};\r\n\r\nfunction popoverIsExpanded(state) {\r\n  return [SUGGESTING, NAVIGATING, INTERACTING].includes(state);\r\n}\r\n/**\r\n * When we open a list, set the navigation value to the value in the input, if\r\n * it's in the list, then it'll automatically be highlighted.\r\n *\r\n * @param stateData\r\n * @param event\r\n */\r\n\r\n\r\nfunction findNavigationValue(stateData, event) {\r\n  // @ts-ignore\r\n  if (event.value) {\r\n    // @ts-ignore\r\n    return event.value; // @ts-ignore\r\n  } else if (event.persistSelection) {\r\n    return stateData.value;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nvar ComboboxDescendantContext = /*#__PURE__*/createDescendantContext(\"ComboboxDescendantContext\");\r\nvar ComboboxContext = /*#__PURE__*/createNamedContext(\"ComboboxContext\", {}); // Allows us to put the option's value on context so that ComboboxOptionText\r\n// can work it's highlight text magic no matter what else is rendered around\r\n// it.\r\n\r\nvar OptionContext = /*#__PURE__*/createNamedContext(\"OptionContext\", {}); ////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Combobox\r\n *\r\n * @see Docs https://reach.tech/combobox#combobox\r\n */\r\n\r\nvar Combobox = /*#__PURE__*/forwardRefWithAs(function Combobox(_ref, forwardedRef) {\r\n  var _data$navigationValue;\r\n\r\n  var onSelect = _ref.onSelect,\r\n      _ref$openOnFocus = _ref.openOnFocus,\r\n      openOnFocus = _ref$openOnFocus === void 0 ? false : _ref$openOnFocus,\r\n      children = _ref.children,\r\n      _ref$as = _ref.as,\r\n      Comp = _ref$as === void 0 ? \"div\" : _ref$as,\r\n      ariaLabel = _ref[\"aria-label\"],\r\n      ariaLabelledby = _ref[\"aria-labelledby\"],\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"onSelect\", \"openOnFocus\", \"children\", \"as\", \"aria-label\", \"aria-labelledby\"]);\r\n\r\n  var _useDescendantsInit = useDescendantsInit(),\r\n      options = _useDescendantsInit[0],\r\n      setOptions = _useDescendantsInit[1]; // Need this to focus it\r\n\r\n\r\n  var inputRef = useRef();\r\n  var popoverRef = useRef();\r\n  var buttonRef = useRef(); // When <ComboboxInput autocomplete={false} /> we don't want cycle back to\r\n  // the user's value while navigating (because it's always the user's value),\r\n  // but we need to know this in useKeyDown which is far away from the prop\r\n  // here, so we do something sneaky and write it to this ref on context so we\r\n  // can use it anywhere else 😛. Another new trick for me and I'm excited\r\n  // about this one too!\r\n\r\n  var autocompletePropRef = useRef();\r\n  var persistSelectionRef = useRef();\r\n  var defaultData = {\r\n    // The value the user has typed. We derive this also when the developer is\r\n    // controlling the value of ComboboxInput.\r\n    value: \"\",\r\n    // the value the user has navigated to with the keyboard\r\n    navigationValue: null\r\n  };\r\n\r\n  var _useReducerMachine = useReducerMachine(stateChart, reducer, defaultData),\r\n      state = _useReducerMachine[0],\r\n      data = _useReducerMachine[1],\r\n      transition = _useReducerMachine[2];\r\n\r\n  useFocusManagement(data.lastEventType, inputRef);\r\n  var id = useId(props.id);\r\n  var listboxId = id ? makeId(\"listbox\", id) : \"listbox\";\r\n  var context = {\r\n    ariaLabel: ariaLabel,\r\n    ariaLabelledby: ariaLabelledby,\r\n    autocompletePropRef: autocompletePropRef,\r\n    buttonRef: buttonRef,\r\n    comboboxId: id,\r\n    data: data,\r\n    inputRef: inputRef,\r\n    isExpanded: popoverIsExpanded(state),\r\n    listboxId: listboxId,\r\n    onSelect: onSelect || noop,\r\n    openOnFocus: openOnFocus,\r\n    persistSelectionRef: persistSelectionRef,\r\n    popoverRef: popoverRef,\r\n    state: state,\r\n    transition: transition\r\n  };\r\n  useCheckStyles(\"combobox\");\r\n  return /*#__PURE__*/createElement(DescendantProvider, {\r\n    context: ComboboxDescendantContext,\r\n    items: options,\r\n    set: setOptions\r\n  }, /*#__PURE__*/createElement(ComboboxContext.Provider, {\r\n    value: context\r\n  }, /*#__PURE__*/createElement(Comp, _extends({}, props, {\r\n    \"data-reach-combobox\": \"\",\r\n    \"data-state\": getDataState(state),\r\n    ref: forwardedRef\r\n  }), isFunction(children) ? children({\r\n    id: id,\r\n    isExpanded: popoverIsExpanded(state),\r\n    navigationValue: (_data$navigationValue = data.navigationValue) != null ? _data$navigationValue : null,\r\n    state: state\r\n  }) : children)));\r\n});\r\n/**\r\n * @see Docs https://reach.tech/combobox#combobox-props\r\n */\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  Combobox.displayName = \"Combobox\";\r\n  Combobox.propTypes = {\r\n    as: PropTypes.any,\r\n    onSelect: PropTypes.func,\r\n    openOnFocus: PropTypes.bool\r\n  };\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * ComboboxInput\r\n *\r\n * Wraps an `<input/>` with a couple extra props that work with the combobox.\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxinput\r\n */\r\n\r\n\r\nvar ComboboxInput = /*#__PURE__*/forwardRefWithAs(function ComboboxInput(_ref2, forwardedRef) {\r\n  var _ref2$as = _ref2.as,\r\n      Comp = _ref2$as === void 0 ? \"input\" : _ref2$as,\r\n      _ref2$selectOnClick = _ref2.selectOnClick,\r\n      selectOnClick = _ref2$selectOnClick === void 0 ? false : _ref2$selectOnClick,\r\n      _ref2$autocomplete = _ref2.autocomplete,\r\n      autocomplete = _ref2$autocomplete === void 0 ? true : _ref2$autocomplete,\r\n      onClick = _ref2.onClick,\r\n      onChange = _ref2.onChange,\r\n      onKeyDown = _ref2.onKeyDown,\r\n      onBlur = _ref2.onBlur,\r\n      onFocus = _ref2.onFocus,\r\n      controlledValue = _ref2.value,\r\n      props = _objectWithoutPropertiesLoose(_ref2, [\"as\", \"selectOnClick\", \"autocomplete\", \"onClick\", \"onChange\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"value\"]);\r\n\r\n  // https://github.com/reach/reach-ui/issues/464\r\n  var _React$useRef = useRef(controlledValue),\r\n      initialControlledValue = _React$useRef.current;\r\n\r\n  var controlledValueChangedRef = useRef(false);\r\n  useUpdateEffect(function () {\r\n    controlledValueChangedRef.current = true;\r\n  }, [controlledValue]);\r\n\r\n  var _React$useContext = useContext(ComboboxContext),\r\n      _React$useContext$dat = _React$useContext.data,\r\n      navigationValue = _React$useContext$dat.navigationValue,\r\n      value = _React$useContext$dat.value,\r\n      lastEventType = _React$useContext$dat.lastEventType,\r\n      inputRef = _React$useContext.inputRef,\r\n      state = _React$useContext.state,\r\n      transition = _React$useContext.transition,\r\n      listboxId = _React$useContext.listboxId,\r\n      autocompletePropRef = _React$useContext.autocompletePropRef,\r\n      openOnFocus = _React$useContext.openOnFocus,\r\n      isExpanded = _React$useContext.isExpanded,\r\n      ariaLabel = _React$useContext.ariaLabel,\r\n      ariaLabelledby = _React$useContext.ariaLabelledby;\r\n\r\n  var ref = useForkedRef(inputRef, forwardedRef); // Because we close the List on blur, we need to track if the blur is\r\n  // caused by clicking inside the list, and if so, don't close the List.\r\n\r\n  var selectOnClickRef = useRef(false);\r\n  var handleKeyDown = useKeyDown();\r\n  var handleBlur = useBlur();\r\n  var isControlled = controlledValue != null; // Layout effect should be SSR-safe here because we don't actually do\r\n  // anything with this ref that involves rendering until after we've\r\n  // let the client hydrate in nested components.\r\n\r\n  useIsomorphicLayoutEffect(function () {\r\n    autocompletePropRef.current = autocomplete;\r\n  }, [autocomplete, autocompletePropRef]);\r\n  var handleValueChange = useCallback(function (value) {\r\n    if (value.trim() === \"\") {\r\n      transition(CLEAR);\r\n    } else if (value === initialControlledValue && !controlledValueChangedRef.current) {\r\n      transition(INITIAL_CHANGE, {\r\n        value: value\r\n      });\r\n    } else {\r\n      transition(CHANGE, {\r\n        value: value\r\n      });\r\n    }\r\n  }, [initialControlledValue, transition]);\r\n  useEffect(function () {\r\n    // If they are controlling the value we still need to do our transitions,\r\n    // so  we have this derived state to emulate onChange of the input as we\r\n    // receive new `value`s ...[*]\r\n    if (isControlled && controlledValue !== value && ( // https://github.com/reach/reach-ui/issues/481\r\n    controlledValue.trim() === \"\" ? (value || \"\").trim() !== \"\" : true)) {\r\n      handleValueChange(controlledValue);\r\n    }\r\n  }, [controlledValue, handleValueChange, isControlled, value]); // [*]... and when controlled, we don't trigger handleValueChange as the\r\n  // user types, instead the developer controls it with the normal input\r\n  // onChange prop\r\n\r\n  function handleChange(event) {\r\n    var value = event.target.value;\r\n\r\n    if (!isControlled) {\r\n      handleValueChange(value);\r\n    }\r\n  }\r\n\r\n  function handleFocus() {\r\n    if (selectOnClick) {\r\n      selectOnClickRef.current = true;\r\n    } // If we select an option with click, useFocusManagement will focus the\r\n    // input, in those cases we don't want to cause the menu to open back up,\r\n    // so we guard behind these states.\r\n\r\n\r\n    if (openOnFocus && lastEventType !== SELECT_WITH_CLICK) {\r\n      transition(FOCUS);\r\n    }\r\n  }\r\n\r\n  function handleClick() {\r\n    if (selectOnClickRef.current) {\r\n      selectOnClickRef.current = false;\r\n      inputRef.current.select();\r\n    }\r\n  }\r\n\r\n  var inputValue = autocomplete && (state === NAVIGATING || state === INTERACTING) ? // When idle, we don't have a navigationValue on ArrowUp/Down\r\n  navigationValue || controlledValue || value : controlledValue || value;\r\n  return /*#__PURE__*/createElement(Comp, _extends({\r\n    \"aria-activedescendant\": navigationValue ? String(makeHash(navigationValue)) : undefined,\r\n    \"aria-autocomplete\": \"both\",\r\n    \"aria-controls\": listboxId,\r\n    \"aria-expanded\": isExpanded,\r\n    \"aria-haspopup\": \"listbox\",\r\n    \"aria-label\": ariaLabel,\r\n    \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledby,\r\n    role: \"combobox\"\r\n  }, props, {\r\n    \"data-reach-combobox-input\": \"\",\r\n    \"data-state\": getDataState(state),\r\n    ref: ref,\r\n    onBlur: wrapEvent(onBlur, handleBlur),\r\n    onChange: wrapEvent(onChange, handleChange),\r\n    onClick: wrapEvent(onClick, handleClick),\r\n    onFocus: wrapEvent(onFocus, handleFocus),\r\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown),\r\n    value: inputValue || \"\"\r\n  }));\r\n});\r\n/**\r\n * @see Docs https://reach.tech/combobox#comboboxinput-props\r\n */\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  ComboboxInput.displayName = \"ComboboxInput\";\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * ComboboxPopover\r\n *\r\n * Contains the popup that renders the list. Because some UI needs to render\r\n * more than the list in the popup, you need to render one of these around the\r\n * list. For example, maybe you want to render the number of results suggested.\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxpopover\r\n */\r\n\r\n\r\nvar ComboboxPopover = /*#__PURE__*/forwardRefWithAs(function ComboboxPopover(_ref3, forwardedRef) {\r\n  var _ref3$as = _ref3.as,\r\n      Comp = _ref3$as === void 0 ? \"div\" : _ref3$as,\r\n      children = _ref3.children,\r\n      _ref3$portal = _ref3.portal,\r\n      portal = _ref3$portal === void 0 ? true : _ref3$portal,\r\n      onKeyDown = _ref3.onKeyDown,\r\n      onBlur = _ref3.onBlur,\r\n      _ref3$position = _ref3.position,\r\n      position = _ref3$position === void 0 ? positionMatchWidth : _ref3$position,\r\n      props = _objectWithoutPropertiesLoose(_ref3, [\"as\", \"children\", \"portal\", \"onKeyDown\", \"onBlur\", \"position\"]);\r\n\r\n  var _React$useContext2 = useContext(ComboboxContext),\r\n      popoverRef = _React$useContext2.popoverRef,\r\n      inputRef = _React$useContext2.inputRef,\r\n      isExpanded = _React$useContext2.isExpanded,\r\n      state = _React$useContext2.state;\r\n\r\n  var ref = useForkedRef(popoverRef, forwardedRef);\r\n  var handleKeyDown = useKeyDown();\r\n  var handleBlur = useBlur();\r\n  var sharedProps = {\r\n    \"data-reach-combobox-popover\": \"\",\r\n    \"data-state\": getDataState(state),\r\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown),\r\n    onBlur: wrapEvent(onBlur, handleBlur),\r\n    // Instead of conditionally rendering the popover we use the `hidden` prop\r\n    // because we don't want to unmount on close (from escape or onSelect).\r\n    // However, the developer can conditionally render the ComboboxPopover if\r\n    // they do want to cause mount/unmount based on the app's own data (like\r\n    // results.length or whatever).\r\n    hidden: !isExpanded,\r\n    tabIndex: -1,\r\n    children: children\r\n  };\r\n  return portal ? /*#__PURE__*/createElement(Popover, _extends({\r\n    as: Comp\r\n  }, props, {\r\n    ref: ref,\r\n    position: position,\r\n    targetRef: inputRef\r\n  }, sharedProps)) : /*#__PURE__*/createElement(Comp, _extends({\r\n    ref: ref\r\n  }, props, sharedProps));\r\n});\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  ComboboxPopover.displayName = \"ComboboxPopover\";\r\n}\r\n/**\r\n * @see Docs https://reach.tech/combobox#comboboxpopover-props\r\n */\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * ComboboxList\r\n *\r\n * Contains the `ComboboxOption` elements and sets up the proper aria attributes\r\n * for the list.\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxlist\r\n */\r\nvar ComboboxList = /*#__PURE__*/forwardRefWithAs(function ComboboxList(_ref4, forwardedRef) {\r\n  var _ref4$persistSelectio = _ref4.persistSelection,\r\n      persistSelection = _ref4$persistSelectio === void 0 ? false : _ref4$persistSelectio,\r\n      _ref4$as = _ref4.as,\r\n      Comp = _ref4$as === void 0 ? \"ul\" : _ref4$as,\r\n      props = _objectWithoutPropertiesLoose(_ref4, [\"persistSelection\", \"as\"]);\r\n\r\n  var _React$useContext3 = useContext(ComboboxContext),\r\n      persistSelectionRef = _React$useContext3.persistSelectionRef,\r\n      listboxId = _React$useContext3.listboxId;\r\n\r\n  if (persistSelection) {\r\n    persistSelectionRef.current = true;\r\n  }\r\n\r\n  return /*#__PURE__*/createElement(Comp, _extends({\r\n    role: \"listbox\"\r\n  }, props, {\r\n    ref: forwardedRef,\r\n    \"data-reach-combobox-list\": \"\",\r\n    id: listboxId\r\n  }));\r\n});\r\n/**\r\n * @see Docs https://reach.tech/combobox#comboboxlist-props\r\n */\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  ComboboxList.displayName = \"ComboboxList\";\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * ComboboxOption\r\n *\r\n * An option that is suggested to the user as they interact with the combobox.\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxoption\r\n */\r\n\r\n\r\nvar ComboboxOption = /*#__PURE__*/forwardRefWithAs(function ComboboxOption(_ref5, forwardedRef) {\r\n  var _ref5$as = _ref5.as,\r\n      Comp = _ref5$as === void 0 ? \"li\" : _ref5$as,\r\n      children = _ref5.children,\r\n      value = _ref5.value,\r\n      onClick = _ref5.onClick,\r\n      props = _objectWithoutPropertiesLoose(_ref5, [\"as\", \"children\", \"value\", \"onClick\"]);\r\n\r\n  var _React$useContext4 = useContext(ComboboxContext),\r\n      onSelect = _React$useContext4.onSelect,\r\n      navigationValue = _React$useContext4.data.navigationValue,\r\n      transition = _React$useContext4.transition;\r\n\r\n  var ownRef = useRef(null);\r\n  var ref = useForkedRef(forwardedRef, ownRef);\r\n  var index = useDescendant({\r\n    element: ownRef.current,\r\n    value: value\r\n  }, ComboboxDescendantContext);\r\n  var isActive = navigationValue === value;\r\n\r\n  var handleClick = function handleClick() {\r\n    onSelect && onSelect(value);\r\n    transition(SELECT_WITH_CLICK, {\r\n      value: value\r\n    });\r\n  };\r\n\r\n  return /*#__PURE__*/createElement(OptionContext.Provider, {\r\n    value: {\r\n      value: value,\r\n      index: index\r\n    }\r\n  }, /*#__PURE__*/createElement(Comp, _extends({\r\n    \"aria-selected\": isActive,\r\n    role: \"option\"\r\n  }, props, {\r\n    \"data-reach-combobox-option\": \"\",\r\n    ref: ref,\r\n    id: String(makeHash(value)),\r\n    \"data-highlighted\": isActive ? \"\" : undefined // Without this the menu will close from `onBlur`, but with it the\r\n    // element can be `document.activeElement` and then our focus checks in\r\n    // onBlur will work as intended\r\n    ,\r\n    tabIndex: -1,\r\n    onClick: wrapEvent(onClick, handleClick)\r\n  }), children ? isFunction(children) ? children({\r\n    value: value,\r\n    index: index\r\n  }) : children : /*#__PURE__*/createElement(ComboboxOptionText, null)));\r\n});\r\n/**\r\n * @see Docs https://reach.tech/combobox#comboboxoption-props\r\n */\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  ComboboxOption.displayName = \"ComboboxOption\";\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * ComboboxOptionText\r\n *\r\n * Renders the value of a `ComboboxOption` as text but with spans wrapping the\r\n * matching and non-matching segments of text.\r\n *\r\n * We don't forwardRef or spread props because we render multiple spans or null,\r\n * should be fine 🤙\r\n *\r\n * @example\r\n *   <ComboboxOption value=\"Seattle\">\r\n *     🌧 <ComboboxOptionText />\r\n *   </ComboboxOption>\r\n *\r\n * @see Docs https://reach.tech/combobox#comboboxoptiontext\r\n */\r\n\r\n\r\nfunction ComboboxOptionText() {\r\n  var _React$useContext5 = useContext(OptionContext),\r\n      value = _React$useContext5.value;\r\n\r\n  var _React$useContext6 = useContext(ComboboxContext),\r\n      contextValue = _React$useContext6.data.value;\r\n\r\n  var results = useMemo(function () {\r\n    return findAll({\r\n      searchWords: escapeRegexp(contextValue || \"\").split(/\\s+/),\r\n      textToHighlight: value\r\n    });\r\n  }, [contextValue, value]);\r\n  return /*#__PURE__*/createElement(Fragment, null, results.length ? results.map(function (result, index) {\r\n    var str = value.slice(result.start, result.end);\r\n    return /*#__PURE__*/createElement(\"span\", {\r\n      key: index,\r\n      \"data-reach-combobox-option-text\": \"\",\r\n      \"data-user-value\": result.highlight ? true : undefined,\r\n      \"data-suggested-value\": result.highlight ? undefined : true\r\n    }, str);\r\n  }) : value);\r\n}\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  ComboboxOptionText.displayName = \"ComboboxOptionText\";\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * ComboboxButton\r\n */\r\n\r\n\r\nvar ComboboxButton = /*#__PURE__*/forwardRefWithAs(function ComboboxButton(_ref6, forwardedRef) {\r\n  var _ref6$as = _ref6.as,\r\n      Comp = _ref6$as === void 0 ? \"button\" : _ref6$as,\r\n      onClick = _ref6.onClick,\r\n      onKeyDown = _ref6.onKeyDown,\r\n      props = _objectWithoutPropertiesLoose(_ref6, [\"as\", \"onClick\", \"onKeyDown\"]);\r\n\r\n  var _React$useContext7 = useContext(ComboboxContext),\r\n      transition = _React$useContext7.transition,\r\n      state = _React$useContext7.state,\r\n      buttonRef = _React$useContext7.buttonRef,\r\n      listboxId = _React$useContext7.listboxId,\r\n      isExpanded = _React$useContext7.isExpanded;\r\n\r\n  var ref = useForkedRef(buttonRef, forwardedRef);\r\n  var handleKeyDown = useKeyDown();\r\n\r\n  var handleClick = function handleClick() {\r\n    if (state === IDLE) {\r\n      transition(OPEN_WITH_BUTTON);\r\n    } else {\r\n      transition(CLOSE_WITH_BUTTON);\r\n    }\r\n  };\r\n\r\n  return /*#__PURE__*/createElement(Comp, _extends({\r\n    \"aria-controls\": listboxId,\r\n    \"aria-haspopup\": \"listbox\",\r\n    \"aria-expanded\": isExpanded\r\n  }, props, {\r\n    \"data-reach-combobox-button\": \"\",\r\n    ref: ref,\r\n    onClick: wrapEvent(onClick, handleClick),\r\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown)\r\n  }));\r\n});\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  ComboboxButton.displayName = \"ComboboxButton\";\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Move focus back to the input if we start navigating w/ the\r\n * keyboard after focus has moved to any focusable content in\r\n * the popup.\r\n *\r\n * @param lastEventType\r\n * @param inputRef\r\n */\r\n\r\n\r\nfunction useFocusManagement(lastEventType, inputRef) {\r\n  // useLayoutEffect so that the cursor goes to the end of the input instead\r\n  // of awkwardly at the beginning, unclear to me why 🤷‍♂️\r\n  //\r\n  // Should be safe to use here since we're just focusing an input.\r\n  useIsomorphicLayoutEffect(function () {\r\n    if (lastEventType === NAVIGATE || lastEventType === ESCAPE || lastEventType === SELECT_WITH_CLICK || lastEventType === OPEN_WITH_BUTTON) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [inputRef, lastEventType]);\r\n}\r\n/**\r\n * We want the same events when the input or the popup have focus (HOW COOL ARE\r\n * HOOKS BTW?) This is probably the hairiest piece but it's not bad.\r\n */\r\n\r\n\r\nfunction useKeyDown() {\r\n  var _React$useContext8 = useContext(ComboboxContext),\r\n      navigationValue = _React$useContext8.data.navigationValue,\r\n      onSelect = _React$useContext8.onSelect,\r\n      state = _React$useContext8.state,\r\n      transition = _React$useContext8.transition,\r\n      autocompletePropRef = _React$useContext8.autocompletePropRef,\r\n      persistSelectionRef = _React$useContext8.persistSelectionRef;\r\n\r\n  var options = useDescendants(ComboboxDescendantContext);\r\n  return function handleKeyDown(event) {\r\n    var index = options.findIndex(function (_ref7) {\r\n      var value = _ref7.value;\r\n      return value === navigationValue;\r\n    });\r\n\r\n    function getNextOption() {\r\n      var atBottom = index === options.length - 1;\r\n\r\n      if (atBottom) {\r\n        if (autocompletePropRef.current) {\r\n          // Go back to the value the user has typed because we are\r\n          // autocompleting and they need to be able to get back to what\r\n          // they had typed w/o having to backspace out.\r\n          return null;\r\n        } else {\r\n          // cycle through\r\n          return getFirstOption();\r\n        }\r\n      } else {\r\n        // Go to the next item in the list\r\n        return options[(index + 1) % options.length];\r\n      }\r\n    }\r\n\r\n    function getPreviousOption() {\r\n      var atTop = index === 0;\r\n\r\n      if (atTop) {\r\n        if (autocompletePropRef.current) {\r\n          // Go back to the value the user has typed because we are\r\n          // autocompleting and they need to be able to get back to what\r\n          // they had typed w/o having to backspace out.\r\n          return null;\r\n        } else {\r\n          // cycle through\r\n          return getLastOption();\r\n        }\r\n      } else if (index === -1) {\r\n        // displaying the user's value, so go select the last one\r\n        return getLastOption();\r\n      } else {\r\n        // normal case, select previous\r\n        return options[(index - 1 + options.length) % options.length];\r\n      }\r\n    }\r\n\r\n    function getFirstOption() {\r\n      return options[0];\r\n    }\r\n\r\n    function getLastOption() {\r\n      return options[options.length - 1];\r\n    }\r\n\r\n    switch (event.key) {\r\n      case \"ArrowDown\":\r\n        // Don't scroll the page\r\n        event.preventDefault();\r\n\r\n        if (!options || !options.length) {\r\n          return;\r\n        }\r\n\r\n        if (state === IDLE) {\r\n          // Opening a closed list\r\n          transition(NAVIGATE, {\r\n            persistSelection: persistSelectionRef.current\r\n          });\r\n        } else {\r\n          var next = getNextOption();\r\n          transition(NAVIGATE, {\r\n            value: next ? next.value : null\r\n          });\r\n        }\r\n\r\n        break;\r\n      // A lot of duplicate code with ArrowDown up next, I'm already over it.\r\n\r\n      case \"ArrowUp\":\r\n        // Don't scroll the page\r\n        event.preventDefault();\r\n\r\n        if (!options || options.length === 0) {\r\n          return;\r\n        }\r\n\r\n        if (state === IDLE) {\r\n          transition(NAVIGATE);\r\n        } else {\r\n          var prev = getPreviousOption();\r\n          transition(NAVIGATE, {\r\n            value: prev ? prev.value : null\r\n          });\r\n        }\r\n\r\n        break;\r\n\r\n      case \"Home\":\r\n      case \"PageUp\":\r\n        // Don't scroll the page\r\n        event.preventDefault();\r\n\r\n        if (!options || options.length === 0) {\r\n          return;\r\n        }\r\n\r\n        if (state === IDLE) {\r\n          transition(NAVIGATE);\r\n        } else {\r\n          transition(NAVIGATE, {\r\n            value: getFirstOption().value\r\n          });\r\n        }\r\n\r\n        break;\r\n\r\n      case \"End\":\r\n      case \"PageDown\":\r\n        // Don't scroll the page\r\n        event.preventDefault();\r\n\r\n        if (!options || options.length === 0) {\r\n          return;\r\n        }\r\n\r\n        if (state === IDLE) {\r\n          transition(NAVIGATE);\r\n        } else {\r\n          transition(NAVIGATE, {\r\n            value: getLastOption().value\r\n          });\r\n        }\r\n\r\n        break;\r\n\r\n      case \"Escape\":\r\n        if (state !== IDLE) {\r\n          transition(ESCAPE);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"Enter\":\r\n        if (state === NAVIGATING && navigationValue !== null) {\r\n          // don't want to submit forms\r\n          event.preventDefault();\r\n          onSelect && onSelect(navigationValue);\r\n          transition(SELECT_WITH_KEYBOARD);\r\n        }\r\n\r\n        break;\r\n    }\r\n  };\r\n}\r\n\r\nfunction useBlur() {\r\n  var _React$useContext9 = useContext(ComboboxContext),\r\n      state = _React$useContext9.state,\r\n      transition = _React$useContext9.transition,\r\n      popoverRef = _React$useContext9.popoverRef,\r\n      inputRef = _React$useContext9.inputRef,\r\n      buttonRef = _React$useContext9.buttonRef;\r\n\r\n  var rafIds = useLazyRef(function () {\r\n    return new Set();\r\n  });\r\n  useEffect(function () {\r\n    return function () {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      rafIds.current.forEach(function (id) {\r\n        return cancelAnimationFrame(id);\r\n      });\r\n    };\r\n  }, [rafIds]);\r\n  return function handleBlur() {\r\n    var ownerDocument = getOwnerDocument(popoverRef.current);\r\n\r\n    if (!ownerDocument) {\r\n      return;\r\n    }\r\n\r\n    var rafId = requestAnimationFrame(function () {\r\n      // we on want to close only if focus propss outside the combobox\r\n      if (ownerDocument.activeElement !== inputRef.current && ownerDocument.activeElement !== buttonRef.current && popoverRef.current) {\r\n        if (popoverRef.current.contains(ownerDocument.activeElement)) {\r\n          // focus landed inside the combobox, keep it open\r\n          if (state !== INTERACTING) {\r\n            transition(INTERACT);\r\n          }\r\n        } else {\r\n          // focus landed outside the combobox, close it.\r\n          transition(BLUR);\r\n        }\r\n      }\r\n    });\r\n    rafIds.current.add(rafId);\r\n  };\r\n}\r\n/**\r\n * This manages transitions between states with a built in reducer to manage\r\n * the data that goes with those transitions.\r\n *\r\n * @param chart\r\n * @param reducer\r\n * @param initialData\r\n */\r\n\r\n\r\nfunction useReducerMachine(chart, reducer, initialData) {\r\n  var _React$useState = useState(chart.initial),\r\n      state = _React$useState[0],\r\n      setState = _React$useState[1];\r\n\r\n  var _React$useReducer = useReducer(reducer, initialData),\r\n      data = _React$useReducer[0],\r\n      dispatch = _React$useReducer[1];\r\n\r\n  var transition = function transition(event, payload) {\r\n    if (payload === void 0) {\r\n      payload = {};\r\n    }\r\n\r\n    var currentState = chart.states[state];\r\n    var nextState = currentState && currentState.on[event];\r\n\r\n    if (nextState) {\r\n      dispatch(_extends({\r\n        type: event,\r\n        state: state,\r\n        nextState: state\r\n      }, payload));\r\n      setState(nextState);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return [state, data, transition];\r\n}\r\n/**\r\n * We don't want to track the active descendant with indexes because nothing is\r\n * more annoying in a combobox than having it change values RIGHT AS YOU HIT\r\n * ENTER. That only happens if you use the index as your data, rather than\r\n * *your data as your data*. We use this to generate a unique ID based on the\r\n * value of each item.  This function is short, sweet, and good enough™ (I also\r\n * don't know how it works, tbqh)\r\n *\r\n * @see https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n * @param str\r\n */\r\n\r\n\r\nfunction makeHash(str) {\r\n  var hash = 0;\r\n\r\n  if (str.length === 0) {\r\n    return hash;\r\n  }\r\n\r\n  for (var i = 0; i < str.length; i++) {\r\n    var _char = str.charCodeAt(i);\r\n\r\n    hash = (hash << 5) - hash + _char;\r\n    hash = hash & hash;\r\n  }\r\n\r\n  return hash;\r\n}\r\n\r\nfunction getDataState(state) {\r\n  return state.toLowerCase();\r\n}\r\n/**\r\n * Escape regexp special characters in `str`\r\n *\r\n * @see https://github.com/component/escape-regexp/blob/5ce923c1510c9802b3da972c90b6861dd2829b6b/index.js\r\n * @param str\r\n */\r\n\r\n\r\nfunction escapeRegexp(str) {\r\n  return String(str).replace(/([.*+?=^!:${}()|[\\]/\\\\])/g, \"\\\\$1\");\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * A hook that exposes data for a given `Combobox` component to its descendants.\r\n *\r\n * @see Docs https://reach.tech/combobox#usecomboboxcontext\r\n */\r\n\r\nfunction useComboboxContext() {\r\n  var _React$useContext10 = useContext(ComboboxContext),\r\n      isExpanded = _React$useContext10.isExpanded,\r\n      comboboxId = _React$useContext10.comboboxId,\r\n      data = _React$useContext10.data,\r\n      state = _React$useContext10.state;\r\n\r\n  var navigationValue = data.navigationValue;\r\n  return useMemo(function () {\r\n    return {\r\n      id: comboboxId,\r\n      isExpanded: isExpanded,\r\n      navigationValue: navigationValue != null ? navigationValue : null,\r\n      state: state\r\n    };\r\n  }, [comboboxId, isExpanded, navigationValue, state]);\r\n}\r\n/**\r\n * A hook that exposes data for a given `ComboboxOption` component to its descendants.\r\n *\r\n * @see Docs https://reach.tech/combobox#usecomboboxcontext\r\n */\r\n\r\nfunction useComboboxOptionContext() {\r\n  var _React$useContext11 = useContext(OptionContext),\r\n      value = _React$useContext11.value,\r\n      index = _React$useContext11.index;\r\n\r\n  return useMemo(function () {\r\n    return {\r\n      value: value,\r\n      index: index\r\n    };\r\n  }, [value, index]);\r\n} ////////////////////////////////////////////////////////////////////////////////\r\n// Well alright, you made it all the way here to like 1100 lines of code (geez,\r\n// what the heck?). Have a great day :D\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Types\r\n\r\nexport { Combobox, ComboboxButton, ComboboxInput, ComboboxList, ComboboxOption, ComboboxOptionText, ComboboxPopover, escapeRegexp, useComboboxContext, useComboboxOptionContext };\r\n"]},"metadata":{},"sourceType":"module"}