{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\evan_\\\\Documents\\\\GitHub\\\\F29SO-Picshare\\\\client\\\\src\\\\Post.js\";\nimport React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport CardContent from '@material-ui/core/CardContent';\nimport Axios from 'axios';\nvar split = [];\nvar add = true;\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: props.description,\n      key: props.key,\n      file: props.file,\n      tags: props.tags,\n      user: props.user,\n      id: 0\n    };\n    console.log(\"Props file: \" + props.file);\n  }\n\n  postPostInfo() {\n    Axios.post('http://localhost:3001/posts', {\n      username: this.state.user,\n      description: this.state.description,\n      img: this.state.file\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        this.setState({\n          id: response.data.insertId\n        });\n        this.parseTags();\n      } else {\n        console.log(\"no response\");\n      }\n    });\n    add = false;\n  }\n\n  postPostTags() {\n    console.log(\"intags\");\n    console.log(this.state.id);\n\n    if (this.state.id != 0) {\n      Axios.post('http://localhost:3001/tags', {\n        tags: split,\n        id: this.state.id\n      }).then(response => {\n        if (response) {} else {\n          console.log(\"no response\");\n        }\n      });\n    }\n  }\n\n  parseTags() {\n    split = this.state.tags.split(\" \");\n    console.log(split);\n    this.postPostTags();\n  }\n\n  componentDidMount() {\n    // Runs after the first render\n    console.log(\"in component\");\n    this.postPostInfo();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"postimg\",\n            src: this.state.file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: this.state.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: this.state.tags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, this.state.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/evan_/Documents/GitHub/F29SO-Picshare/client/src/Post.js"],"names":["React","Component","Card","Typography","ListItem","CardContent","Axios","split","add","Post","constructor","props","state","description","key","file","tags","user","id","console","log","postPostInfo","post","username","img","then","response","setState","data","insertId","parseTags","postPostTags","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar split = [];\r\nvar add = true;\r\n\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { description: props.description, key: props.key, file: props.file, tags : props.tags, user: props.user, id:0};\r\n      console.log(\"Props file: \" + props.file);\r\n    }\r\n\r\n\r\n\r\n    postPostInfo() {\r\n\r\n      Axios.post('http://localhost:3001/posts', {\r\n                username: this.state.user,\r\n                description: this.state.description,\r\n                img: this.state.file\r\n\r\n            }).then((response) => {\r\n              if(response){\r\n                console.log(response)\r\n                this.setState({id : response.data.insertId});\r\n                this.parseTags();\r\n\r\n\r\n              }else {\r\n                console.log(\"no response\")\r\n              }\r\n\r\n\r\n            })\r\n          add = false;\r\n\r\n    }\r\n\r\n    postPostTags() {\r\n      console.log(\"intags\")\r\n      console.log(this.state.id)\r\n      if(this.state.id != 0){\r\n        Axios.post('http://localhost:3001/tags', {\r\n                  tags: split,\r\n                  id: this.state.id\r\n\r\n\r\n              }).then((response) => {\r\n                if(response){\r\n\r\n                }else {\r\n                  console.log(\"no response\")\r\n                }\r\n\r\n\r\n              })\r\n        }\r\n    }\r\n\r\n    parseTags(){\r\n      split = this.state.tags.split(\" \")\r\n\r\n      console.log(split)\r\n      this.postPostTags();\r\n\r\n    }\r\n\r\n    componentDidMount() { // Runs after the first render\r\n      console.log(\"in component\")\r\n\r\n        this.postPostInfo();\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n      return (\r\n\r\n        <ListItem key={this.state.key}>\r\n            <Card>\r\n                <CardContent>\r\n                <img className=\"postimg\" src={this.state.file} />\r\n                <Typography>\r\n                    User\r\n                </Typography>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    {this.state.description}\r\n                </Typography>\r\n                <br></br>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    {this.state.tags}\r\n                </Typography>\r\n                </CardContent>\r\n            </Card>\r\n\r\n        </ListItem>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}