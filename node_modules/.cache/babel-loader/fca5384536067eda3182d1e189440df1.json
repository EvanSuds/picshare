{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\evan_\\\\Documents\\\\GitHub\\\\F29SO-Picshare\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport { resolve } from 'dns';\nimport PasswordStrength from \"./passwordStrength\";\nimport Button from \"react-bootstrap/Button\";\nimport { BrowserRouter, Switch, Route, Link, Redirect, withRouter, useHistory } from \"react-router-dom\";\nimport Profile from \"./profile\";\nimport ProtectedRoute from \"./protectedRoute\";\nimport up from \"./upA.png\";\n\nfunction App(props) {\n  _s();\n\n  const history = useHistory();\n\n  const redirect = path => {\n    history.push(path);\n  }; //username for registration\n\n\n  const [UsernameReg, setUsernameReg] = useState(''); //username for registration\n\n  const [EmailReg, setEmailReg] = useState(''); //password for registration\n\n  const [PasswordReg, setPasswordReg] = useState(''); //confirm password for registration\n\n  const [ConPasswordReg, setConPasswordReg] = useState(''); //username for login\n\n  const [UsernameEmail, setUsernameEmail] = useState(''); //password for login\n\n  const [Password, setPassword] = useState('');\n  const [passwordFocus, setPasswordFocus] = useState(false);\n  const [passwordValid, setPasswordValid] = useState({\n    minlength: null,\n    number: null,\n    specialChar: null,\n    illegalChar: null\n  }); //checks if a user is logged in\n\n  const [isLoggedIn, setisLoggedIn] = useState(false); //checks if a user is logged in\n\n  const [isRegi, setisRegi] = useState(false); //status of the feedback header at the bottom of the page\n\n  const [status, setStatus] = useState(''); //toggle for registration div\n\n  const [show, setShow] = useState(false); //credintials for get, using axios\n\n  Axios.defaults.withCredentials = true;\n  const isNumber = /\\d/;\n  const specialCharacterRegx = /[ !@#$%^&*()_+\\-=\\[\\]{}'\"\\\\|,.\\/]/;\n  const illegalCharacterRegx = /[<>;:?]/;\n\n  const checkValidity = password => {\n    setPasswordValid({\n      minlength: password.length >= 8 ? true : false,\n      number: isNumber.test(password) ? true : false,\n      specialChar: specialCharacterRegx.test(password) ? true : false,\n      illegalChar: illegalCharacterRegx.test(password) ? false : true\n    });\n  }; // register post method\n\n\n  function register() {\n    if (passwordValid.illegalChar === true && passwordValid.minlength === true && passwordValid.specialChar === true && passwordValid.number === true) {\n      if (PasswordReg === ConPasswordReg) {\n        Axios.post('http://localhost:3001/register', {\n          username: UsernameReg,\n          password: PasswordReg,\n          email: EmailReg\n        }).then(response => {\n          console.log(\"this is regi response \" + response);\n\n          if (response.data.message) {\n            setStatus(response.data.message);\n          }\n        });\n        setisRegi(true);\n        setStatus(\"You have registered!\");\n      } else {\n        setStatus(\"Passwords do not match\");\n      }\n    } else {\n      setStatus(\"Password is invalid\");\n    }\n  }\n\n  ; // login post method\n\n  const login = () => {\n    Axios.post('http://localhost:3001/login', {\n      usernameEmail: UsernameEmail,\n      password: Password\n    }).then(response => {\n      if (response.data.message) {\n        setStatus(response.data.message);\n        setisLoggedIn(false);\n      } else {\n        //console.log(response);\n        //setStatus(response.data[0].Username);\n        setisLoggedIn(true);\n\n        if (response.data[0].Username !== \"\" && response.data[0].password !== \"\") {\n          redirect(\"/profile\");\n        } else {\n          setStatus(\"Please enter a username and password\");\n        }\n      }\n    });\n  }; // login post method\n\n\n  const refresh = () => {\n    Axios.post('http://localhost:3001/refresh', {}).then(response => {\n      console.log(\"refresh response\" + response);\n    });\n  }; // login post method\n\n\n  const update = () => {\n    Axios.post('http://localhost:3001/updateTable', {}).then(response => {\n      console.log(\"update response\" + response);\n    });\n  }; // login post method\n\n\n  const loginRegi = () => {\n    Axios.post('http://localhost:3001/login', {\n      usernameEmail: UsernameReg,\n      password: PasswordReg\n    }).then(response => {\n      //console.log(\"details \" + UsernameReg + PasswordReg)\n      if (response.data.message) {\n        //console.log(\"login regis response \" + response.data.message);\n        setisLoggedIn(false);\n      } else {\n        //console.log(\"this is the login \" + response);\n        redirect(\"/regiLanding\");\n      }\n    });\n  };\n\n  const help = () => {\n    setTimeout(update(), 5000);\n    setTimeout(refresh(), 5000);\n    setTimeout(loginRegi(), 5000);\n  }; //on page loading check if cookie exist for user being logged  in\n\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/checklogin').then(response => {\n      if (response.data.loggedIn === true) {\n        //console.log(response);\n        //setStatus(response.data.user[0].Username);\n        setisLoggedIn(true);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"regi\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"headings\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"regiUN\",\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => {\n          setUsernameReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"regiEmail\",\n        type: \"text\",\n        placeholder: \"Optional Email\",\n        onChange: e => {\n          setEmailReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"regiP\",\n        type: \"text\",\n        onFocus: () => setPasswordFocus(true),\n        onBlur: () => setPasswordFocus(false),\n        placeholder: \"Password\",\n        onChange: e => {\n          setPasswordReg(e.target.value);\n          checkValidity(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"conRegiP\",\n        type: \"text\",\n        placeholder: \"Confirm password\",\n        onChange: e => {\n          setConPasswordReg(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }, this), passwordFocus ? /*#__PURE__*/_jsxDEV(PasswordStrength, {\n        validity: passwordValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        onClick: e => {\n          register();\n        },\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }, this), //reveal status below regi form\n      !show ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"headings\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }, this) : null, isRegi ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: help,\n        children: \" set up profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }, this), //reveal login form\n    !show ?\n    /*#__PURE__*/\n    //button for toggling open registration div\n    _jsxDEV(Button, {\n      className: \"button2\",\n      onClick: () => {\n        setShow(!show);\n        setStatus(\"\");\n      },\n      children: \"Already a member? login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }, this) : null, show ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"headings\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"logUN\",\n        type: \"text\",\n        placeholder: \"Username or Email\",\n        onChange: e => {\n          setUsernameEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"logP\",\n        type: \"text\",\n        placeholder: \"Password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button2\",\n        onClick: () => {\n          setShow(!show);\n          setStatus(\"\");\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"up\",\n          alt: \"hide\",\n          src: up\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 12\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 12\n    }, this) : null, // reveal status below login form\n    show ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"headings\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 5\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"jjDjeEFVL5blqFyJCylz8V0LOKs=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/evan_/Documents/GitHub/F29SO-Picshare/client/src/App.js"],"names":["React","useState","useEffect","Axios","resolve","PasswordStrength","Button","BrowserRouter","Switch","Route","Link","Redirect","withRouter","useHistory","Profile","ProtectedRoute","up","App","props","history","redirect","path","push","UsernameReg","setUsernameReg","EmailReg","setEmailReg","PasswordReg","setPasswordReg","ConPasswordReg","setConPasswordReg","UsernameEmail","setUsernameEmail","Password","setPassword","passwordFocus","setPasswordFocus","passwordValid","setPasswordValid","minlength","number","specialChar","illegalChar","isLoggedIn","setisLoggedIn","isRegi","setisRegi","status","setStatus","show","setShow","defaults","withCredentials","isNumber","specialCharacterRegx","illegalCharacterRegx","checkValidity","password","length","test","register","post","username","email","then","response","console","log","data","message","login","usernameEmail","Username","refresh","update","loginRegi","help","setTimeout","get","loggedIn","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}       from 'react';\r\nimport './App.css';\r\nimport Axios from 'axios';\r\nimport { resolve } from 'dns';\r\nimport PasswordStrength from \"./passwordStrength\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {BrowserRouter , Switch, Route, Link, Redirect, withRouter, useHistory }from \"react-router-dom\";\r\nimport Profile from \"./profile\";\r\nimport ProtectedRoute from \"./protectedRoute\";\r\nimport up from \"./upA.png\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n\r\n\r\n\r\n  const history = useHistory();\r\n\r\n  const redirect = (path) => {\r\n\r\n    history.push(path);\r\n  };\r\n\r\n\r\n  //username for registration\r\n  const [UsernameReg, setUsernameReg] = useState('');\r\n\r\n  //username for registration\r\n  const [EmailReg, setEmailReg] = useState('');\r\n\r\n  //password for registration\r\n  const [PasswordReg, setPasswordReg] = useState('');\r\n\r\n  //confirm password for registration\r\n  const [ConPasswordReg, setConPasswordReg] = useState('');\r\n\r\n  //username for login\r\n  const [UsernameEmail, setUsernameEmail] = useState('');\r\n\r\n  //password for login\r\n  const [Password, setPassword] = useState('');\r\n\r\n  const [passwordFocus, setPasswordFocus] = useState(false);\r\n\r\n  const [passwordValid, setPasswordValid] = useState({\r\n    minlength: null,\r\n    number: null,\r\n    specialChar: null,\r\n    illegalChar: null\r\n  });\r\n\r\n//checks if a user is logged in\r\n  const [isLoggedIn, setisLoggedIn] = useState(false);\r\n\r\n  //checks if a user is logged in\r\n  const [isRegi, setisRegi] = useState(false);\r\n\r\n\r\n  //status of the feedback header at the bottom of the page\r\n  const [status, setStatus] = useState('');\r\n\r\n\r\n  //toggle for registration div\r\n  const [show, setShow] = useState(false);\r\n\r\n\r\n\r\n  //credintials for get, using axios\r\n  Axios.defaults.withCredentials = true;\r\n\r\n\r\n\r\n  const isNumber =/\\d/;\r\n  const specialCharacterRegx = /[ !@#$%^&*()_+\\-=\\[\\]{}'\"\\\\|,.\\/]/;\r\n  const illegalCharacterRegx = /[<>;:?]/;\r\n\r\n  const checkValidity = password => {\r\n    setPasswordValid({\r\n      minlength: password.length >= 8 ? true : false,\r\n      number: isNumber.test(password) ? true : false,\r\n      specialChar: specialCharacterRegx.test(password) ? true : false,\r\n      illegalChar: illegalCharacterRegx.test(password) ? false : true\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  // register post method\r\n  function register(){\r\n\r\n\r\n    if(passwordValid.illegalChar === true && passwordValid.minlength === true && passwordValid.specialChar === true && passwordValid.number === true) {\r\n      if(PasswordReg === ConPasswordReg){\r\n\r\n        Axios.post('http://localhost:3001/register', {\r\n        username: UsernameReg,\r\n        password: PasswordReg,\r\n        email: EmailReg\r\n\r\n        }).then((response) => {\r\n          console.log(\"this is regi response \" +response)\r\n          if(response.data.message){\r\n            setStatus(response.data.message)\r\n          }\r\n\r\n\r\n\r\n\r\n        });\r\n        setisRegi(true);\r\n        setStatus(\"You have registered!\");\r\n\r\n\r\n\r\n\r\n      }\r\n      else{\r\n        setStatus(\"Passwords do not match\");\r\n      }\r\n\r\n    }\r\n    else {\r\n      setStatus(\"Password is invalid\");\r\n    }\r\n  };\r\n\r\n\r\n  // login post method\r\n  const login = () => {\r\n\r\n    Axios.post('http://localhost:3001/login', {\r\n      usernameEmail: UsernameEmail,\r\n      password: Password,\r\n\r\n  }).then((response) => {\r\n    if(response.data.message){\r\n      setStatus(response.data.message);\r\n      setisLoggedIn(false);\r\n    }\r\n    else {\r\n      //console.log(response);\r\n      //setStatus(response.data[0].Username);\r\n      setisLoggedIn(true);\r\n      if(response.data[0].Username !==\"\" && response.data[0].password !== \"\"){\r\n        redirect(\"/profile\");\r\n      }else {\r\n        setStatus(\"Please enter a username and password\");\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n  });\r\n  };\r\n\r\n\r\n\r\n// login post method\r\nconst refresh = ()=>{\r\n\r\n  Axios.post('http://localhost:3001/refresh', {\r\n\r\n\r\n}).then((response) => {\r\n  console.log(\"refresh response\" + response)\r\n});\r\n};\r\n\r\n\r\n// login post method\r\nconst update = () => {\r\n\r\n  Axios.post('http://localhost:3001/updateTable', {\r\n\r\n\r\n}).then((response) => {\r\n  console.log(\"update response\" + response)\r\n});\r\n};\r\n\r\n\r\n // login post method\r\n const loginRegi =  ()=>{\r\n  Axios.post('http://localhost:3001/login', {\r\n    usernameEmail: UsernameReg,\r\n    password: PasswordReg,\r\n\r\n}).then((response) => {\r\n  //console.log(\"details \" + UsernameReg + PasswordReg)\r\n  if(response.data.message){\r\n    //console.log(\"login regis response \" + response.data.message);\r\n    setisLoggedIn(false);\r\n  }else{\r\n    //console.log(\"this is the login \" + response);\r\n    redirect(\"/regiLanding\")\r\n  }\r\n\r\n});\r\n};\r\n\r\n\r\nconst help = () => {\r\n  setTimeout(update(), 5000)\r\n  setTimeout(refresh(), 5000)\r\n  setTimeout(loginRegi(),5000)\r\n}\r\n\r\n\r\n\r\n\r\n//on page loading check if cookie exist for user being logged  in\r\nuseEffect( ()=> {\r\n    Axios.get('http://localhost:3001/checklogin').then((response)=> {\r\n    if(response.data.loggedIn === true){\r\n      //console.log(response);\r\n      //setStatus(response.data.user[0].Username);\r\n      setisLoggedIn(true);\r\n\r\n    }\r\n\r\n    });\r\n  }, []);\r\n\r\n\r\n return (\r\n\r\n\r\n  <div className=\"App\">\r\n    <div className=\"regi\">\r\n\r\n      <h1 className=\"headings\">Sign Up</h1>\r\n      {/*input for registration username */}\r\n      <input className=\"regiUN\" type=\"text\" placeholder=\"Username\" onChange={(e) => {\r\n        setUsernameReg(e.target.value);\r\n      }}/>\r\n      <input className=\"regiEmail\" type=\"text\" placeholder=\"Optional Email\" onChange={(e) => {\r\n        setEmailReg(e.target.value);\r\n      }}/>\r\n      {/*input for registration password */}\r\n      <input className=\"regiP\" type=\"text\" onFocus={ () => setPasswordFocus(true)} onBlur={ () => setPasswordFocus(false)} placeholder=\"Password\" onChange={(e) => {\r\n\r\n        setPasswordReg(e.target.value);\r\n        checkValidity(e.target.value);\r\n      }} />\r\n\r\n      {/*input for registration confirmation password */}\r\n      <input className=\"conRegiP\" type=\"text\" placeholder=\"Confirm password\" onChange={(e) => {\r\n        setConPasswordReg(e.target.value);\r\n      }} />\r\n\r\n      {passwordFocus? <PasswordStrength validity={passwordValid}/>:null}\r\n\r\n      {/* register button that calls register function */}\r\n      <Button className=\"button\" onClick={(e) => {\r\n        register()\r\n      }}>Sign up</Button>\r\n      {//reveal status below regi form\r\n       !show?\r\n      <h2 className=\"headings\">{status}</h2>:null\r\n    }\r\n    { isRegi?\r\n    <Button onClick={help}> set up profile</Button>:null\r\n    }\r\n    </div>\r\n    <br></br>\r\n    {/*button for toggling open registration div */}\r\n\r\n    { //reveal login form\r\n      !show?\r\n    //button for toggling open registration div\r\n\r\n    <Button className=\"button2\" onClick={()=> {\r\n      setShow(!show)\r\n      setStatus(\"\")\r\n    }}>\r\n    Already a member? login </Button>:null\r\n    }\r\n    {\r\n      show?<div className=\"login\">\r\n\r\n      <h1 className=\"headings\">Login</h1>\r\n      {/*input for login username*/}\r\n      <input className=\"logUN\" type=\"text\" placeholder=\"Username or Email\" onChange={(e) => {\r\n        setUsernameEmail(e.target.value);\r\n      }} />\r\n      {/*input for login password */}\r\n      <input className=\"logP\" type=\"text\" placeholder=\"Password\" onChange={(e) => {\r\n        setPassword(e.target.value);\r\n      }}/>\r\n      <Button className=\"button\" onClick={ login }>Login</Button>\r\n      <br></br>\r\n      <Button className=\"button2\" onClick={()=> {\r\n        setShow(!show);\r\n        setStatus(\"\")}\r\n        }> <img className=\"up\" alt=\"hide\" src={up} /> </Button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>:null\r\n  }\r\n   {/* header for feedback of login or registration status */}\r\n\r\n  { // reveal status below login form\r\n  show?\r\n    <h2 className=\"headings\">{status}</h2>:null\r\n    }\r\n</div>\r\n\r\n\r\n );\r\n\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}