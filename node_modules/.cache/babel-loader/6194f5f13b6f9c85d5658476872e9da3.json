{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lachlanmackay/g16/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport { resolve } from 'dns';\nimport PasswordStrength from \"./passwordStrength\";\nimport Button from \"react-bootstrap/Button\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, withRouter } from \"react-router-dom\";\nimport Profile from \"./profile\";\nimport ProtectedRoute from \"./protectedRoute\";\nimport History from \"./history\";\n\nfunction App() {\n  _s();\n\n  const history = createHistory(); //username for registration\n\n  const [UsernameReg, setUsernameReg] = useState(''); //username for registration\n\n  const [EmailReg, setEmailReg] = useState(''); //password for registration \n\n  const [PasswordReg, setPasswordReg] = useState(''); //confirm password for registration \n\n  const [ConPasswordReg, setConPasswordReg] = useState(''); //username for login\n\n  const [UsernameEmail, setUsernameEmail] = useState(''); //password for login \n\n  const [Password, setPassword] = useState('');\n  const [passwordFocus, setPasswordFocus] = useState(false);\n  const [passwordValid, setPasswordValid] = useState({\n    minlength: null,\n    number: null,\n    specialChar: null,\n    illegalChar: null\n  }); //checks if a user is logged in \n\n  const [isLoggedIn, setisLoggedIn] = useState(false); //status of the feedback header at the bottom of the page \n\n  const [status, setStatus] = useState(''); //toggle for registration div\n\n  const [show, setShow] = useState(false); //credintials for get, using axios\n\n  Axios.defaults.withCredentials = true;\n  const isNumber = /\\d/;\n  const specialCharacterRegx = /[ !@#$%^&*()_+\\-=\\[\\]{}'\"\\\\|,.\\/]/;\n  const illegalCharacterRegx = /[<>;:?]/;\n\n  const checkValidity = password => {\n    setPasswordValid({\n      minlength: password.length >= 8 ? true : false,\n      number: isNumber.test(password) ? true : false,\n      specialChar: specialCharacterRegx.test(password) ? true : false,\n      illegalChar: illegalCharacterRegx.test(password) ? false : true\n    });\n  }; // register post method \n\n\n  const register = () => {\n    if (passwordValid.illegalChar === true && passwordValid.minlength === true && passwordValid.specialChar === true && passwordValid.number === true) {\n      if (PasswordReg === ConPasswordReg) {\n        setStatus(\"You have registered!\");\n        Axios.post('http://localhost:3001/register', {\n          username: UsernameReg,\n          password: PasswordReg,\n          email: EmailReg\n        }).then(response => {//console.log(response)\n        });\n      } else {\n        setStatus(\"Passwords do not match\");\n      }\n    } else {\n      setStatus(\"Password is invalid\");\n    }\n  }; // login post method \n\n\n  const login = props => {\n    Axios.post('http://localhost:3001/login', {\n      usernameEmail: UsernameEmail,\n      password: Password\n    }).then(response => {\n      if (response.data.message) {\n        setStatus(response.data.message);\n      } else {\n        console.log(response);\n        setStatus(response.data[0].Username);\n        setisLoggedIn(true);\n        return history.push(\"/profile\");\n      }\n    });\n  }; //on page loading check if cookie exist for user being logged  in\n\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/checklogin').then(response => {\n      if (response.data.loggedIn === true) {\n        //console.log(response);\n        setStatus(response.data.user[0].Username);\n        setisLoggedIn(true);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"logUN\",\n            type: \"text\",\n            placeholder: \"Username or Email\",\n            onChange: e => {\n              setUsernameEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"logP\",\n            type: \"text\",\n            placeholder: \"Password\",\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            children: \"kkkkkkk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 5\n        }, this), !show ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShow(!show),\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 5\n        }, this) : null, show ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"regi\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"regiUN\",\n            type: \"text\",\n            placeholder: \"Username\",\n            onChange: e => {\n              setUsernameReg(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"regiEmail\",\n            type: \"text\",\n            placeholder: \"Optional Email\",\n            onChange: e => {\n              setEmailReg(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"regiP\",\n            type: \"text\",\n            onFocus: () => setPasswordFocus(true),\n            onBlur: () => setPasswordFocus(false),\n            placeholder: \"Password\",\n            onChange: e => {\n              console.log(passwordFocus);\n              setPasswordReg(e.target.value);\n              checkValidity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"conRegiP\",\n            type: \"text\",\n            placeholder: \"Confirm password\",\n            onChange: e => {\n              setConPasswordReg(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this), passwordFocus ? /*#__PURE__*/_jsxDEV(PasswordStrength, {\n            validity: passwordValid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 27\n          }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: register,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShow(false),\n            children: \" Hide \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 12\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/profile\",\n      component: Profile,\n      isAuth: isLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cvCFDWthDLANVAC61fWryorwAxc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lachlanmackay/g16/client/src/App.js"],"names":["React","useState","useEffect","Axios","resolve","PasswordStrength","Button","BrowserRouter","Router","Switch","Route","Link","Redirect","useHistory","withRouter","Profile","ProtectedRoute","History","App","history","createHistory","UsernameReg","setUsernameReg","EmailReg","setEmailReg","PasswordReg","setPasswordReg","ConPasswordReg","setConPasswordReg","UsernameEmail","setUsernameEmail","Password","setPassword","passwordFocus","setPasswordFocus","passwordValid","setPasswordValid","minlength","number","specialChar","illegalChar","isLoggedIn","setisLoggedIn","status","setStatus","show","setShow","defaults","withCredentials","isNumber","specialCharacterRegx","illegalCharacterRegx","checkValidity","password","length","test","register","post","username","email","then","response","login","props","usernameEmail","data","message","console","log","Username","push","get","loggedIn","user","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}       from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport { resolve } from 'dns';\nimport PasswordStrength from \"./passwordStrength\";\nimport Button from \"react-bootstrap/Button\";\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory, withRouter }from \"react-router-dom\";\nimport Profile from \"./profile\";\nimport ProtectedRoute from \"./protectedRoute\";\nimport History from \"./history\"\n\n\n\n\nfunction App() {\n\n  \n  \n  const history = createHistory()\n  \n  \n  //username for registration\n  const [UsernameReg, setUsernameReg] = useState('');\n\n  //username for registration\n  const [EmailReg, setEmailReg] = useState('');\n\n  //password for registration \n  const [PasswordReg, setPasswordReg] = useState('');\n\n  //confirm password for registration \n  const [ConPasswordReg, setConPasswordReg] = useState('');\n\n  //username for login\n  const [UsernameEmail, setUsernameEmail] = useState('');\n\n  //password for login \n  const [Password, setPassword] = useState('');\n\n  const [passwordFocus, setPasswordFocus] = useState(false);\n\n  const [passwordValid, setPasswordValid] = useState({\n    minlength: null,\n    number: null,\n    specialChar: null,\n    illegalChar: null\n  });\n\n//checks if a user is logged in \n  const [isLoggedIn, setisLoggedIn] = useState(false);\n\n  \n  \n\n  //status of the feedback header at the bottom of the page \n  const [status, setStatus] = useState('');\n\n  //toggle for registration div\n  const [show, setShow] = useState(false);\n\n  //credintials for get, using axios\n  Axios.defaults.withCredentials = true;\n\n  const isNumber =/\\d/;\n  const specialCharacterRegx = /[ !@#$%^&*()_+\\-=\\[\\]{}'\"\\\\|,.\\/]/;\n  const illegalCharacterRegx = /[<>;:?]/;\n\n  const checkValidity = password => {\n    setPasswordValid({\n      minlength: password.length >= 8 ? true : false,\n      number: isNumber.test(password) ? true : false,\n      specialChar: specialCharacterRegx.test(password) ? true : false,\n      illegalChar: illegalCharacterRegx.test(password) ? false : true \n    })\n  }\n\n \n  \n  \n  // register post method \n  const register = () => {\n    \n\n    if(passwordValid.illegalChar === true && passwordValid.minlength === true && passwordValid.specialChar === true && passwordValid.number === true) {\n      if(PasswordReg === ConPasswordReg){\n        setStatus(\"You have registered!\");\n        Axios.post('http://localhost:3001/register', {\n        username: UsernameReg,\n        password: PasswordReg,\n        email: EmailReg\n  \n        }).then((response) => {\n        //console.log(response)\n        });\n      }\n      else{\n        setStatus(\"Passwords do not match\");\n      }\n      \n    }\n    else {\n      setStatus(\"Password is invalid\");\n    }\n    \n  };\n\n  \n  // login post method \n  const login = props => {\n    \n    Axios.post('http://localhost:3001/login', {\n      usernameEmail: UsernameEmail,\n      password: Password,\n\n  }).then((response) => {\n    if(response.data.message){\n      setStatus(response.data.message);\n    }\n    else {\n      console.log(response);\n      setStatus(response.data[0].Username);\n      setisLoggedIn(true);\n      return history.push(\"/profile\")\n      \n     \n      \n      \n      \n    }\n  });\n  };\n\n\n//on page loading check if cookie exist for user being logged  in\nuseEffect( ()=> {\n    Axios.get('http://localhost:3001/checklogin').then((response)=> {\n    if(response.data.loggedIn === true){\n      //console.log(response);\n      setStatus(response.data.user[0].Username);\n      setisLoggedIn(true);\n      \n      \n       \n      \n      \n      \n    }\n    \n    });\n  }, []);\n\n  \n return (\n\n    <Router>\n\n  <Route path='/' exact>\n  <div className=\"App\">\n\n    <div className=\"login\">\n\n          <h1>Login</h1>\n          {/*input for login username*/}\n          <input className=\"logUN\" type=\"text\" placeholder=\"Username or Email\" onChange={(e) => {\n            setUsernameEmail(e.target.value);\n          }} />\n          {/*input for login password */}\n          <input className=\"logP\" type=\"text\" placeholder=\"Password\" onChange={(e) => {\n            setPassword(e.target.value);\n          }}/>\n          <Button onClick={ login }>Login</Button>\n          <Link to=\"/profile\">kkkkkkk</Link>\n         \n          \n\n\n        \n    \n    </div>\n    <br></br>\n    {/*button for toggling open registration div */}\n    { !show?\n    <Button onClick={()=> setShow(!show)}> Register </Button>:null\n    }\n    { \n      show?<div className=\"regi\">\n\n          <h1>Create an account</h1>\n          {/*input for registration username */}\n          <input className=\"regiUN\" type=\"text\" placeholder=\"Username\" onChange={(e) => {\n            setUsernameReg(e.target.value);\n          }}/>\n          <input className=\"regiEmail\" type=\"text\" placeholder=\"Optional Email\" onChange={(e) => {\n            setEmailReg(e.target.value);\n          }}/>\n          {/*input for registration password */}\n          <input className=\"regiP\" type=\"text\" onFocus={ () => setPasswordFocus(true)} onBlur={ () => setPasswordFocus(false)} placeholder=\"Password\" onChange={(e) => {\n            console.log(passwordFocus);\n            setPasswordReg(e.target.value);\n            checkValidity(e.target.value);\n          }} />\n          \n          {/*input for registration confirmation password */}\n          <input className=\"conRegiP\" type=\"text\" placeholder=\"Confirm password\" onChange={(e) => {\n            setConPasswordReg(e.target.value);\n          }} />\n\n          {passwordFocus? <PasswordStrength validity={passwordValid}/>:null}\n\n          {/* register button that calls register function */}\n          <Button onClick={register}>Register</Button>\n          <Button onClick={() => setShow(false)}> Hide </Button>\n         \n        \n    </div>:null\n  }\n   {/* header for feedback of login or registration status */}\n  <h1>{status}</h1>\n</div>\n  </Route>\n  \n  <ProtectedRoute path=\"/profile\" component={Profile} isAuth={isLoggedIn}/>\n  </Router>\n );\n\n\n   \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}